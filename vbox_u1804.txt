/sbin/rcvboxadd quicksetup <version>
/sbin/rcvboxadd quicksetup all

更换源为 mirrors.163.com
sudo update

安装vbox增强后
sudo vi /etc/fstab
share /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0


https://developer.nvidia.com/nvsdk-manager

sudo dpkg -i sdkmanager_1.4.1-7402_amd64.deb
sudo apt install -f
sudo apt install vim-gtk vim ctags vim-doc vim-scripts exuberant-ctags libtemplate-perl ispell vim-addon-manager cscope

sudo apt install shadowsocks shadowsocks-libev privoxy proxychains
可以命令运行
nohup sslocal -c /etc/shadowsocks.json /dev/null 2>&1 &
也可以设置服务

sudo gedit /lib/systemd/system/shadowsocks@.service
-------------------------------
[Unit]
Description=Shadowsocks Client Service
After=network.target

[Service]
Type=simple
User=nobody
ExecStart=/usr/bin/sslocal -c /etc/shadowsocks/%i.json

[Install]
WantedBy=multi-user.target
-------------------------------

sudo gedit /etc/shadowsocks/config.json
-------------------------------
{
    "server":"119.28.9.79",
    "server_port":3588,
    "local_address": "127.0.0.1",
    "local_port":1081,
    "password":"xinhai",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false,
    "workers": 10
}
-------------------------------
sudo systemctl enable shadowsocks@config.service
Created symlink /etc/systemd/system/multi-user.target.wants/shadowsocks@config.service → /lib/systemd/system/shadowsocks@.service.

sudo systemctl start shadowsocks@config.service
systemctl status shadowsocks@config.service


sudo gedit /etc/privoxy/config
------
listen-address  localhost:8118
forward-socks5 / 127.0.0.1:1081 .
------
privoxy /etc/privoxy/config启动
systemctl status privoxy.service
sudo systemctl start privoxy.service
sudo systemctl enable privoxy.service
Created symlink /etc/systemd/system/multi-user.target.wants/privoxy.service → /usr/lib/systemd/system/privoxy.service.


类似于这样
aria2c --all-proxy='http://127.0.0.1:8118' -D


export https_proxy="127.0.0.1:8118"
export http_proxy="127.0.0.1:8118"
(可以添加到类似/etc/profile的地方去)

测试
curl www.google.com


yay
就可以加速了


sudo gedit /etc/proxychains.conf
----------------------------------
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to "tor"
#socks4 	127.0.0.1 9050
# set to "v2ray"
#socks5 	127.0.0.1 10808
# set to "SS"
socks5 	127.0.0.1 1081
--------------------------------



测试
export PROXY_DNS_SERVER=8.8.8.8
PROXYCHAINS_SOCKS5=1081 proxychains4 -f /etc/proxychains.conf curl www.google.com
proxychains curl www.google.com










sudo tail -f ~/.nvsdkm/sdkm.log
sdkmanager

https://developer.download.nvidia.com/sdkmanager/sdkm-config/SDKMANAGER/Linux/sdkml2_sdkmanager_linux_deb.json

https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/sdkml3_jetpack_l4t_451.json
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17_DEEPSTREAM/sdkml3_jetpack_l4t_451_deepstream.json
实际上类似于这样
https://developer.download.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17_DEEPSTREAM/sdkml3_jetpack_l4t_451_deepstream.json?WXKwCOquaAWNu0X3zcATvilrY8x1PcRrVnEG9pKFSH4Vc4GegPrhsJb9NW5jLO6ylPTWFG4XGwCKG7GwqvdWzwzy6dKGkfZECHjUg-F8LzftM6d-GbL_y06u3O7YXGErzlb8S1fzx31JU8oefmvxMgvyEWvkbs6exA2oog-oWXxwFR30l6h53XE7g-Dul5QDb7i-V2RJy0BFG6G6oxNl0devcqnhb0qnS_o3a0aszUa3enxdriPIUmac9AQN9Q

几个比较大的文件很难下
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/ubuntu1804/cuda-repo-ubuntu1804-10-2-local-10.2.89-440.40_1.0-1_amd64.deb
https://developer.download.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/T210/Tegra_Linux_Sample-Root-Filesystem_R32.5.1_aarch64.tbz2
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/cuda-repo-l4t-10-2-local-10.2.89_1.0-1_arm64.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NsightSystems-linux-public-2020.5.3.17-0256620.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NoDLA/libnvinfer-samples_7.1.3-1+cuda10.2_all.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NoDLA/libnvinfer-doc_7.1.3-1+cuda10.2_all.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NoDLA/libnvinfer-bin_7.1.3-1+cuda10.2_arm64.deb

https://developer.download.nvidia.com//assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/DLA/libnvinfer-samples_7.1.3-1+cuda10.2_all.deb
https://developer.download.nvidia.com//assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/T186/Jetson_Linux_R32.5.1_aarch64.tbz2
https://developer.download.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17_DEEPSTREAM/deepstream-5.1_5.1.0-1_arm64.deb
有时候替换成developer.download.nvidia.cn可以下的动
http://172.17.0.1/Jetson_Linux_R32.5.1_aarch64.tbz2?fid=xPaCAOd6Io9uzil11Ik8wMSQiC196eQUAAAAAF0vEo99-hU7BE7JoYsl-BNsMd2-&mid=666&threshold=150&tid=5E392A99E5A7292FF65E3AB98212333E&srcid=119&verno=1


导出cookie再用工具下载
#   1) wget -x --load-cookies cookies.txt "chrome://startpage/downloads"
#   2) curl --cookie cookies.txt "chrome://startpage/downloads"
#   3) aria2c --load-cookies cookies.txt "chrome://startpage/downloads"




sudo apt install aptitude curl aria2 wget
sudo apt install xinit openbox menu libxml2-dev tint2 openbox-menu openbox-gnome-session pkg-config menu-l10n lxdm obmenu feh dmenu fonts-dejavu
sudo apt install lxappearance pcmanfm libfm-tools lxterminal leafpad



sudo passwd root
sudo gedit /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf
```
[Seat:*]
greeter-session=unity-greeter
user-session=ubuntu
greeter-show-manual-login=true
all-guest=false
```


/root/.profile
```
mesg n
```
改成
```
tty -s && mesg n
```

恢复默认网卡为eth0
sudo vim /etc/default/grub
查找
GRUB_CMDLINE_LINUX=""
修改为
GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"
重新生成grub引导配置文件
sudo grub-mkconfig -o /boot/grub/grub.cfg



sudo apt install libgtk2.0-dev libpango-perl libpango1.0-dev
sudo apt install build-essential cpanminus git

sudo cpan install YAML Gtk2 Pango Linux::DesktopFiles Data::Dump

git clone git://github.com/trizen/obmenu-generator
sudo cp obmenu-generator/obmenu-generator /usr/bin
mkdir ~/.config/obmenu-generator/
sudo cp -r obmenu-generator/schema.pl ~/.config/obmenu-generator/
sudo cpanm Linux::DesktopFiles
sudo cpanm Data::Dump
sudo chmod 777 /usr/bin/obmenu-generator 

obmenu-generator -i


～/config/dmenu目录


sudo apt install conky conky-all tk-dev
sudo apt install volumeicon-alsa
sudo apt install gnome-icon-theme
sudo apt install parcellite 
sudo apt install shutter
sudo apt install net-tools
sudo apt install rar 
sudo apt install p7zip p7zip-full p7zip-rar unace unrar zip unzip p7zip-full p7zip-rar sharutils uudeview mpack jlha-utils arj cabextract file-roller xz-utils
sudo apt install fonts-ipafont-gothic fonts-ipafont-mincho fonts-wqy-microhei fonts-wqy-zenhei fonts-indic
sudo apt install git libgtk2.0-dev libglib2.0-dev libgconf2-dev libgstreamer1.0-dev g++ make cmake libgst-dev autoconf libtool automake
sudo apt install cmake cmake-gui
sudo apt install python-pip
sudo apt install gtk-theme-switch gtk2-engines
sudo apt install openbox-dev
sudo apt install lxappearance-obconf adwaita-icon-theme-full
sudo apt install opera
sudo apt install chromium-browser  chromium-browser-l10n firefox

obconf
导入carbon.obt
lxappearance

sudo apt install network-manager-dev network-manager-openvpn network-manager-pptp network-manager-vpnc network-manager-openconnect network-manager-iodine pppoe ppp pppoeconf pppconfig
sudo apt install fcitx-table-wubi libreoffice-l10n-en-za hyphen-en-gb hunspell-en-ca libreoffice-l10n-en-gb thunderbird-locale-en-gb mythes-en-au libreoffice-help-en-gb fcitx-sunpinyin hunspell-en-za gimp-help-en kde-l10n-engb hunspell-en-au hunspell-en-gb kde-l10n-zhcn
sudo apt install fcitx-googlepinyin fcitx fcitx-bin fcitx-data fcitx-modules fcitx-googlepinyin fcitx-config-gtk fcitx-frontend-gtk2 fcitx-ui-classic fcitx-module-dbus
sudo im-config

sudo apt install xscreensaver libopengl-xscreensaver-perl xscreensaver-data xscreensaver-data-extra xscreensaver-gl xscreensaver-gl-extra xscreensaver-screensaver-bsod xscreensaver-screensaver-dizzy xscreensaver-screensaver-webcollage fonts-freefont-ttf

$ git clone https://github.com/valr/cbatticon
$ cd cbatticon
$ make WITH_GTK3=0 WITH_NOTIFY=0
$ sudo make install
$ cbatticon &

https://www.pixelstalk.net/ubuntu-logo-wallpapers/
背景放到/usr/share/wallpapers/



下载包在
~/Downloads/nvidia/sdkm_downloads
安装在
~/nvidia/nvidia_sdk


sudo apt install mlocate
sudo updatedb



sudo apt install iptux


~/.bashrc添加一句
PS1="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$ "


~/.xprofile中加入：(不要在/etc/environment)
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export QT4_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx




nvidia默认的usb网口
目标板：192.168.55.1
PC：192.168.55.100



sudo apt install ubuntu-desktop
sudo apt install ubuntu-restricted-extras
sudo apt install ubuntu-unity-desktop
需要重启
sudo shutdown -r now



sudo cp /usr/share/applications/fcitx.desktop ~/.config/autostart/fcitx.desktop
或者
sudo cp /usr/share/fcitx/xdg/autostart/fcitx-autostart.desktop /etc/xdg/autostart/





cat /etc/apt/sources.list

# deb cdrom:[Ubuntu 18.04.5 LTS _Bionic Beaver_ - Release amd64 (20200806.1)]/ bionic main restricted

# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://mirrors.163.com/ubuntu/ bionic main restricted
# deb-src http://mirrors.163.com/ubuntu/ bionic main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted
# deb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://mirrors.163.com/ubuntu/ bionic universe
# deb-src http://mirrors.163.com/ubuntu/ bionic universe
deb http://mirrors.163.com/ubuntu/ bionic-updates universe
# deb-src http://mirrors.163.com/ubuntu/ bionic-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu 
## team, and may not be under a free licence. Please satisfy yourself as to 
## your rights to use the software. Also, please note that software in 
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://mirrors.163.com/ubuntu/ bionic multiverse
# deb-src http://mirrors.163.com/ubuntu/ bionic multiverse
deb http://mirrors.163.com/ubuntu/ bionic-updates multiverse
# deb-src http://mirrors.163.com/ubuntu/ bionic-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
deb http://archive.canonical.com/ubuntu bionic partner
# deb-src http://archive.canonical.com/ubuntu bionic partner

deb http://security.ubuntu.com/ubuntu bionic-security main restricted
# deb-src http://security.ubuntu.com/ubuntu bionic-security main restricted
deb http://security.ubuntu.com/ubuntu bionic-security universe
# deb-src http://security.ubuntu.com/ubuntu bionic-security universe
deb http://security.ubuntu.com/ubuntu bionic-security multiverse
# deb-src http://security.ubuntu.com/ubuntu bionic-security multiverse
deb http://archive.ubuntu.com/ubuntu bionic main universe restricted multiverse



sudo dpkg-reconfigure lightdm
sudo dpkg-reconfigure gdm3
unity --version
sudo apt install unity-tweak-tool
sudo apt install screenfetch

sudo apt install gitk
The remote end hung up unexpectedly 解决方案
git config --global http.postBuffer 1048576000
git config --global http.lowSpeedLimit 0
git config --global http.lowSpeedTime 999999  单位 秒




~/.bashrc
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
修改为
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ '




Recommended packages:
  libgoo-canvas-perl libgtk2-appindicator-perl acpi-support gir1.2-gmenu
  memtest86+ unity-webapps-common usb-creator-gtk
The following packages will be REMOVED:
  libavcodec57




unity-control-center
gnome-control-center
都空白哦
这样就可以显示了

env XDG_CURRENT_DESKTOP=GNOME gnome-control-center

可以修改/usr/share/applications/unity-control-center.desktop
unity-control-center应该也类似，XDG_CURRENT_DESKTOP=Unity








sudo apt install qtqr tor

//sudo apt install wine-stable winetricks playonlinux

ERROR: ld.so: object 'libgtk3-nocsd.so.0' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.
sudo apt install gtk3-nocsd
sudo apt-get install libgtk3-nocsd0:i386
sudo apt-get install libgtk3-nocsd0
//gedit ~/.bashrc
//export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgtk3-nocsd.so.0

sudo apt-get purge gtk3-nocsd
关于wine修改这个地方吧
cat /etc/X11/Xsession.d/51gtk3-nocsd-detect





https://download.virtualbox.org/virtualbox/6.1.18
virtualbox-6.1_6.1.18-142142_Ubuntu_bionic_amd64.deb
libqt5opengl5 libqt5x11extras5



//这样版本低 sudo apt install virtualbox virtualbox-guest-additions-iso virtualbox-qt virtualbox-guest-dkms

systemctl status virtualbox.service
sudo usermod -a -G vboxusers <andreas>
cat /etc/group | grep vbox

/var/lib/update-notifier/package-data-downloads/partial/


wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian bionic contrib"




su
proxychains apt install virtualbox-6.1
sudo modinfo vboxdrv
sudo apt purge virtualbox-dkms
sudo apt purge virtualbox-guest-dkms
sudo apt install dkms
sudo /sbin/vboxconfig



sudo virtualbox
安装extension包
或者用命令行添加
VBoxManage extpack install [--replace] <tarball> |
                   uninstall [--force] <name> |
                   cleanup




ERROR: ld.so: object 'libproxychains.so.3' from LD_PRELOAD cannot be preloaded: ignored.
sudo gedit /usr/bin/proxychains
export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libproxychains.so.3

proxychains-ng？？


sudo apt install openocd
Ac6


foxitreader
sudo apt install retext

wps

sudo apt install science-electronics


cliplt 与 parcellite



sudo ubuntu-drivers devices
sudo apt install nvidia-driver-390
sudo apt install nvidia-utils-390

sudo apt-get install mesa-common-dev


nvidia-settings

sudo apt install xserver-xorg-video-nouveau

sudo apt install linux-headers-$(uname -r)



wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda-repo-ubuntu1804-11-2-local_11.2.2-460.32.03-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu1804-11-2-local_11.2.2-460.32.03-1_amd64.deb
sudo apt-key add /var/cuda-repo-ubuntu1804-11-2-local/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda

sudo apt install ubuntu-desktop ubuntu-unity-desktop xserver-xorg-input-all

sudo add-apt-repository ppa:notepadqq-team/notepadqq
sudo apt-get update
sudo apt-get install notepadqq




gedit /var/log/apt/term.log

//sudo aptitude install xserver-xorg-input-all-hwe-18.04 xserver-xorg-input-libinput-hwe-18.04 xserver-xorg-video-ati-hwe-18.04 xserver-xorg-video-fbdev-hwe-18.04 xserver-xorg-video-intel-hwe-18.04 xserver-xorg-video-nouveau-hwe-18.04 xserver-xorg-video-qxl-hwe-18.04 xserver-xorg-video-radeon-hwe-18.04 xserver-xorg-video-vesa-hwe-18.04 xserver-xorg-core-hwe-18.04 ubuntu-desktop ubuntu-unity-desktop xorg xserver-xorg-hwe-18.04 xserver-xorg-video-all-hwe-18.04 xserver-xorg-video-vmware-hwe-18.04 xserver-xorg-video-amdgpu-hwe-18.04 xserver-xorg-input-wacom-hwe-18.04 

sudo aptitude install xserver-xorg-input-all xserver-xorg-input-libinput xserver-xorg-video-ati xserver-xorg-video-fbdev xserver-xorg-video-intel xserver-xorg-video-nouveau xserver-xorg-video-qxl xserver-xorg-video-radeon xserver-xorg-video-vesa xserver-xorg-core ubuntu-desktop ubuntu-unity-desktop xorg xserver-xorg xserver-xorg-video-all xserver-xorg-video-vmware xserver-xorg-video-amdgpu xserver-xorg-input-wacom libqtwebkit4




drawio
matlab 2017




./petalinux-v2020.1-final-installer.run -d /opt/petalinux
$ sudo apt-get install u-boot-tools lrzsz minicom nfs-kernel-server tftpd xinetd libncurses5-dev
$ sudo apt-get install slang-xfig
$ sudo apt-get install quilt
$ sudo apt-get install e2fsck-static
sudo apt-get install build-essential vim tofrodos iproute2 gawk gcc git make net-tools zlib1g-dev libssl-dev flex bison libselinux1 libncurses5-dev tftpd lib32z1 lib32ncurses5 libbz2-1.0:i386 lib32stdc++6 xvfb chrpath socat autoconf libtool
sudo apt-get install screen pax gzip tar
sudo apt-get install tftp


sudo apt-get install tftpd

/etc/xinetd.d/tftp

service tftp
{
protocol = udp
port = 69
socket_type = dgram
wait = yes
user = nobody
server = /usr/sbin/in.tftpd
server_args = /tftpboot
disable = no
}


sudo mkdir -p /tftpboot
sudo chmod 777 /tftpboot
sudo chown nobody /tftpboot
sudo /etc/init.d/xinetd stop
sleep 1
sudo /etc/init.d/xinetd start

确认tftp服务是否已经开启
netstat -au | grep tftp

本机测试,需要tftp客户端
tftp <ip>
get <testfile>

目标板上
tftp -g -r <testfile> <ip>



sudo apt-get install nfs-kernel-server nfs-common portmap
sudo apt install rpcbind
sudo gedit /etc/default/portmap
内容是
-i 127.0.0.1

sudo gedit /etc/hosts.allow
内容是
portmap lockd rquotad mountd statd:ALL

$ sudo exportfs -ra
$ sudo service portmap restart
或者sudo /etc/init.d/rpcbind restart

sudo gedit /etc/exports
内容是
/home/andreas/targetfs *(rw,nohide,insecure,no_subtree_check,async,no_root_squash)

$ sudo /etc/init.d/nfs-kernel-server restart

sudo showmount -e localhost

showmount
rpcinfo
exportfs
nfsstat


服务器端nfs-kernel-server自动安装nfs-common、rpcbind等13个软件包

mount到本机nfs目录的客户端机器。
sudo showmount -e localhost

将配置文件中的目录全部重新export一次！无需重启服务。
sudo exportfs -rv


查看NFS的运行状态
sudo nfsstat

查看rpc执行信息，可以用于检测rpc运行情况
sudo rpcinfo

查看网络端口，NFS默认是使用111端口。
sudo netstat -tu -4

客户端nfs-common自动安装nfs-common、rpcbind等12个软件包

显示指定的（192.168.3.167）NFS服务器上export出来的目录
sudo showmount -e 192.168.3.167

创建本地挂载目录
sudo mkdir -p /mnt/data
将NFS服务器192.168.3.167上的目录，挂载到本地的/mnt/目录下
sudo mount -t nfs 192.168.3.167:/data /mnt/data



为了安装Xilinx vitis
sudo gedit /etc/lsb-release
其中Description:	Ubuntu 18.04.5 LTS
先暂时修改成Description:	Ubuntu 18.04.4 LTS


sudo apt install blt 
sudo apt install lib32asan4 lib32atomic1 lib32cilkrts5 lib32gcc-7-dev lib32gcc1 lib32gomp1 lib32itm1 lib32mpx2 lib32quadmath0 lib32stdc++6 lib32ubsan0 libasound2-dev libbison-dev libc6-dev-i386 libc6-dev-x32 libc6-i386 libc6-x32 libcaca-dev libfl-dev libfl2 libpulse-dev libslang2-dev libtext-unidecode-perl libtinfo-dev libx32asan4 libx32atomic1 libx32cilkrts5 libx32gcc-7-dev libx32gcc1 libx32gomp1 libx32itm1  libx32quadmath0 libx32stdc++6 libx32ubsan0 python3-astroid python3-gitdb python3-isort python3-lazy-object-proxy python3-logilab-common python3-mccabe python3-smmap python3-tk python3-wrapt tk8.6-blt2.5
sudo apt install gcc-7-multilib texinfo libncurses5-dev libapr1 libapr1-dev libaprutil1 libsctp-dev uuid-dev

sudo apt install gcc-multilib
冲突删除了一些包，安装完petalinux再换回来
sudo apt install cuda-cross-aarch64-10-2 g++-7-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-7-aarch64-linux-gnu gcc-aarch64-linux-gnu vpi1-cross-aarch64-l4t
vpi1-cross-aarch64-l4t是nvidia的sdk包里的

vitis后续
sudo /opt/Xilinx/.xinstall/Vitis_2020.1/scripts/installAIeDepLibs.sh
sudo /opt/Xilinx/Vivado/2020.1/data/xicom/cable_drivers/lin64/install_script/install_drivers/install_drivers

这些包还是留着，不要auto remove了
sudo apt install binutils-aarch64-linux-gnu cpp-7-aarch64-linux-gnu cpp-aarch64-linux-gnu cuda-cudart-cross-aarch64-10-2 cuda-cufft-cross-aarch64-10-2 cuda-cupti-cross-aarch64-10-2 cuda-curand-cross-aarch64-10-2 cuda-cusolver-cross-aarch64-10-2 cuda-cusparse-cross-aarch64-10-2 cuda-driver-cross-aarch64-10-2 cuda-misc-headers-cross-aarch64-10-2 cuda-npp-cross-aarch64-10-2 cuda-nsight-compute-addon-l4t-10-2 cuda-nvgraph-cross-aarch64-10-2 cuda-nvml-cross-aarch64-10-2 cuda-nvrtc-cross-aarch64-10-2 gcc-7-aarch64-linux-gnu-base gcc-7-cross-base gcc-8-cross-base libasan4-arm64-cross libatomic1-arm64-cross libc6-arm64-cross libc6-dev-arm64-cross libcublas-cross-aarch64 libgcc-7-dev-arm64-cross libgcc1-arm64-cross libgomp1-arm64-cross libitm1-arm64-cross liblsan0-arm64-cross libstdc++-7-dev-arm64-cross libstdc++6-arm64-cross libtsan0-arm64-cross libubsan0-arm64-cross linux-libc-dev-arm64-cross nsight-compute-addon-l4t-2019.5.0




sudo apt install qtcreator
sudo apt install qtbase5-dev qtbase5-dev-tools qtbase5-doc qtbase5-doc-html qtbase5-examples qtbase5-private-dev qt5-qmake qt5-default qt5-doc qt5-doc-html qt5-assistant qt5ct qtcreator-data qtcreator-doc qtchooser libevdev-doc qt5-style-plugins default-libmysqlclient-dev firebird-dev libpq-dev libsqlite3-dev unixodbc-dev


sudo apt install sqlite sqlitebrowser sqlite-doc libqscintilla2-doc sqlite3-doc


sudo apt install hwinfo



sudo apt install ubuntu-restricted-extras ttf-mscorefonts-installer --reinstall


~/.Xresources
-----------------------------------
Xft.antialias: true
Xft.hinting: true
Xft.hintstyle: hintslight
Xft.lcdfilter: lcddefault
Xft.rgba: rgb
Xft.dpi:   107
-----------------------------------


sudo apt install rlwrap




## for allegro
sudo apt install lsb
sudo apt install ksh lsb-core
sudo apt install vlc-bin
sudo apt install libxmu-dev:i386

cd /usr/local/bin
sudo gedit allegro
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/pcb/bin/allegro
-------------------------------------------------
sudo gedit concepthdl
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/bin/concepthdl
-------------------------------------------------
sudo gedit pad_designer
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/pcb/bin/pad_designer
-------------------------------------------------
sudo chmod +x allegro pad_designer concepthdl

sudo gedit projmgr
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/bin/projmgr
-------------------------------------------------
sudo chmod +x projmgr

eagle 8.1.0
cd /usr/local/bin
sudo gedit eagle
-------------------------------------------------
#!/bin/bash
cd /opt/eagle-8.1.0/
./eagle
-------------------------------------------------
sudo chmod +x eagle
ls eagle -l




sudo aptitude install libssl1.0-dev
sudo aptitude install npm
sudo npm install -g cnpm --registry=https://registry.npm.taobao.org
sudo npm config set registry https://registry.npm.taobao.org

sudo npm install n -g
sudo npm install -g cnpm
sudo n stable
sudo node -v      ###shuould>10
sudo cnpm install -g electron
electron -v


test
git clone https://github.com/electron/electron-quick-start
cd electron-quick-start
cnpm install
cnpm start

sudo cnpm install -g electron@9
electron --version

/media/andreas/4be7143e-a6ab-4c1d-8456-e571b77a1014/usr/lib/electronic-wechat
$ exec electron . "$@"
运行ok
可以复制到
/usr/lib/electronic-wechat


sudo apt install libevince-dev


sudo apt install browser-plugin-evince

sudo apt install ark fam voikko-fi phonon4qt5-backend-gstreamer hspell libdvdcss2
sudo dpkg-reconfigure libdvd-pkg

sudo apt install vlc vlc-plugin-notify vlc-plugin-qt vlc-plugin-samba vlc-plugin-skins2 vlc-plugin-video-splitter vlc-plugin-visualization

sudo apt install caja engrampa meld mate-desktop-environment lzip lzop ncompress rzip unalz fonts-mathjax-extras fonts-stix libjs-mathjax-doc mate-desktop-environment-extras rss-glx synaptic python-configobj-doc python-psutil-doc heimdal-clients  mate-sensors-applet-nvidia


sudo apt install geany geany-common geany-plugins geany-plugins-common

sudo apt install rlwrap

sudo apt install libpoppler-glib-dev poppler-utils browser-plugin-evince

error: RPC failed; curl 56 GnuTLS recv error (-9): A TLS packet with unexpected length was received.
git config --global http.postBuffer 2000000000
not ok
git config --global https.postBuffer 2000000000
sudo apt install gnutls-bin
git config --global http.sslVerify false
git config --global core.longpaths true
anyway ok


sudo cpanm Goo::Canvas/libgoo-canvas-perl
not ok
sudo apt install libgoocanvas2-perl
not ok
https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas-common_1.0.0-1_all.deb
https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas3_1.0.0-1_amd64.deb
https://launchpad.net/ubuntu/+archive/primary/+files/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb

sudo dpkg -i ~/Downloads/libgoocanvas3_1.0.0-1_amd64.deb
sudo dpkg -i ~/Downloads/libgoocanvas-common_1.0.0-1_all.deb
sudo dpkg -i ~/Downloads/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb
sudo apt-get -f install
shutter 编辑功能ok了

https://launchpad.net/ubuntu/+archive/primary/+files/gnome-web-photo_0.10.6-1_amd64.deb
sudo dpkg -i ~/Downloads/gnome-web-photo_0.10.6-1_amd64.deb
sudo apt-get -f install

sudo cpanm Image::ExifTool
sudo cpanm --mirror http://mirrors.163.com/cpan/ --mirror-only Gtk2::AppIndicator
not ok
sudo apt install libgtk2-appindicator-perl
not ok
sudo apt install libappindicator-dev libgtk2.0-dev
//sudo cpan -i Gtk2::AppIndicator
sudo cpanm Gtk2::AppIndicator



sudo apt install miredo



cat /tmp/.mount_Logic-cLBdoK/resources/linux/99-SaleaeLogic.rules | sudo tee /etc/udev/rules.d/99-SaleaeLogic.rules > /dev/null && echo "finished installing /etc/udev/rules.d/99-SaleaeLogic.rules"


sudo apt install zstd libzstd-dev libzstd1-dev
tar -I zstd -xvf dsview-1.12-2-x86_64.pkg.tar.zst


sudo apt-get install git-core build-essential cmake autoconf automake libtool pkg-config \
   libglib2.0-dev libzip-dev libudev-dev libusb-1.0-0-dev \
   python3-dev qt5-default libboost-dev libboost-test-dev libboost-thread-dev libboost-system-dev libboost-filesystem-dev check libfftw3-dev

/etc/udev/rules.d/DreamSourceLab.rules




sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

sudo update-alternatives --config java
sudo update-alternatives --config javac


sudo tar zxvf jdk-8u291-linux-x64.tar.gz -C /usr/lib/jvm
sudo update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.8.0_291/bin/java" 1112
sudo update-alternatives --config java
sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/jdk1.8.0_291/bin/javac" 1112
sudo update-alternatives --config javac
sudo update-alternatives --install "/usr/bin/javah" "javah" "/usr/lib/jvm/jdk1.8.0_291/bin/javah" 1112
sudo update-alternatives --config javah




Android Studio: /dev/kvm device permission denied
sudo apt install qemu-kvm
ls -al /dev/kvm
grep kvm /etc/group
sudo adduser $USER kvm
grep kvm /etc/group

vbox downgrade为vbox6.1.14




maybe don‘t need this adb shit
sudo apt-get install android-tools-adb

andreas@Vostro-5880:/opt/Android
$ ./android-sdk/platform-tools/adb --version
Android Debug Bridge version 1.0.41
Version 31.0.2-7242960
Installed as /opt/Android/android-sdk/platform-tools/adb
andreas@Vostro-5880:/opt/Android
$ adb --version
Android Debug Bridge version 1.0.39
Version 1:8.1.0+r23-5~18.04
Installed as /usr/lib/android-sdk/platform-tools/adb

check
~/.android/adb_usb.ini
/etc/udev/rules.d/50-android.rules

after modify rules don't forget
sudo /etc/init.d/udev restart


sudo apt install tree

sudo apt install ninja-build

sudo apt install cutecom


~/.bashrc

export LM_LICENSE_FILE=/opt/modelsim/license.dat:/opt/altera/license.dat:/opt/lscc/license.dat:/opt/synopsys/synopsys.dat
export PATH=$PATH:/opt/modelsim/modeltech/bin:/opt/modelsim/modeltech/linux_x86_64:/opt/altera/11.0/quartus/bin:/opt/altera/11.0/nios2eds/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/altera/11.0/quartus/dsp_builder/bin64:/opt/altera/11.0/quartus/dspba/Blocksets/BaseBlocks/linux64



/opt/modelsim/modeltech/bin/../linux_x86_64/vish: error while loading shared libraries: libpng12.so.0: cannot open shared object file: No such file or directory
cp /opt/modelsim/modeltech/linux_x86_64 libpng12.so.0* /opt/modelsim/modeltech/lib



sudo apt install gradle gradle-doc gradle-completion
sudo apt purge gradle gradle-doc

sudo snap install gradle  # version 7.0.2, or
sudo apt  install gradle

See 'snap info gradle' for additional versions.

sudo snap install gradle --classic


https://github.com/freemed/tty0tty
sudo apt-get install devscripts
sudo apt-get update && sudo apt-get install -y dh-make dkms build-essential


sudo apt-get install libqt5serialport5
sudo apt-get install libqt5serialport5-dev




sudo apt install binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64  gcc-mingw-w64-base g++-mingw-w64 gcc-mingw-w64 binutils-mingw-w64 gdb-mingw-w64 gdb-mingw-w64-target gfortran-mingw-w64 gfortran-mingw-w64-i686 gfortran-mingw-w64-x86-64 gnat-mingw-w64 gnat-mingw-w64-i686 gnat-mingw-w64-x86-64 gobjc++-mingw-w64 gobjc++-mingw-w64-i686 gobjc++-mingw-w64-x86-64 gobjc-mingw-w64 gobjc-mingw-w64-i686 gobjc-mingw-w64-x86-64 mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-tools mingw-w64-x86-64-dev





sudo apt install kazam
sudo apt install gimp



sudo -H pip3 install numpy==1.8.2 -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install scipy==1.1.0 -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install imageio -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install matplotlib==2.2.4 -i https://mirrors.163.com/pypi/simple




sudo apt install faketime


gedit ~/.config/JetBrains/PyCharm2020.3/pycharm64.vmoptions
rm -rf ~/.config/JetBrains/PyCharm*
rm -rf ~/.local/share/JetBrains/PyCharm*
rm -rf ~/.jetbrains/
rm -rf ~/.local/share/JetBrains
rm -rf ~/.cache/JetBrains

pycharm-professional.desktop
-------------------------------------------
[Desktop Entry]
Name=Pycharm Professional
Comment=Pycharm IDE
Exec=faketime '2021-03-03 08:15:42' /opt/pycharm-professional/bin/pycharm.sh
Icon=/opt/pycharm-professional/bin/pycharm.png
Terminal=false
Type=Application
Categories=GNOME;Application;Development;
StartupNotify=true
-------------------------------------------


VUN5DND42O-eyJsaWNlbnNlSWQiOiJWVU41RE5ENDJPIiwibGljZW5zZWVOYW1lIjoi5r+A5rS75p2l5rqQIHd3d8K3YWppaHVvwrdjb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTA3LTEwIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIxLTA3LTEwIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIxLTA3LTEwIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1YiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRFAiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUERCIiwicGFpZFVwVG8iOiIyMDIxLTA3LTEwIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU0kiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUENXTVAiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwicGFpZFVwVG8iOiIyMDIxLTA3LTEwIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUEMiLCJwYWlkVXBUbyI6IjIwMjEtMDctMTAiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFJCIiwicGFpZFVwVG8iOiIyMDIxLTA3LTEwIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTVyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSUyIsInBhaWRVcFRvIjoiMjAyMS0wNy0xMCIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIxMDYxMVBQQU0wMDAwMDUiLCJoYXNoIjoiMjQ3MzIxOTYvMDoxMDcxMTUyOTU2IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-U8dIpI1MByMXFxwd3R8yORzUJwXoxZzfwttApOYvGdOd5TctZR8gNPOmhWgiETWx8+94VIzhSe20uXrQX00fNf2JETdZbAbl6X6FJelXkAQamglCZb2Ld+HRZcE1Ar1cEFlzXZbDp1AAa74z99jqd3NrCGI6k92W4C94yeDS89VwKSwo2XIPpRj+t1x4qiTlXYE2NK0XJcgoA5BE8idWQxNtBM1GwCD8TUI+2HLA8T6hxqO5ErQvCuut9d3Rh0v2uf9AlL2Vw0W5WgNL/lmoOrXIt7sDB/QprEmUYmm7ccFexCXE+qZAgmmyLHlJ4umpJbh9PKW/m+zW/MBrlriJsQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD


激活码也没啥用

不如用无限试用呢

无限试用有两种方法，一种是上面那么删配置文件，另一种是ide-eval-resetter插件
插件一般在~/.local/share/JetBrains/PyCharm*







sudo apt install peco

sudo apt install virtualenv

sudo -H pip3 install --upgrade pip -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pyinstaller -i https://mirrors.163.com/pypi/simple
//sudo -H pip3 install pyQt5==5.12.0 -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pyQt5 -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pyQt5-tools -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pyqtdoc -i https://mirrors.163.com/pypi/simple

sudo apt install qt5-default qttools5-dev-tools
sudo apt install pyqt5* 







cd /usr/local/bin
sudo gedit uex
---------------------------------
#!/bin/bash
rm ${HOME}/.idm/*.spl
rm /tmp/*.spl
rm ${HOME}/.idm/uex/*.spl
cd /opt/uex/bin
./uex
---------------------------------
sudo chmod +x uex

sudo gedit pycharm
---------------------------------
#!/bin/bash
/opt/pycharm-professional/bin/pycharm.sh
---------------------------------
sudo chmod +x pycharm

sudo gedit android-studio
---------------------------------
#!/bin/bash
/opt/android-studio/bin/studio.sh
---------------------------------
sudo chmod +x android-studio

sudo gedit baidunetdisk
---------------------------------
#!/bin/bash
/opt/baidunetdisk/baidunetdisk  --no-sandbox %U
---------------------------------
sudo chmod +x baidunetdisk

sudo gedit genymotion
---------------------------------
#!/bin/bash
/opt/genymotion/genymotion/genymotion
---------------------------------
sudo chmod +x genymotion

sudo gedit electronic-wechat
---------------------------------
#!/bin/bash
/opt/electronic-wechat-linux-x64/electronic-wechat
---------------------------------
sudo chmod +x electronic-wechat

sudo gedit vivado
---------------------------------
#!/bin/bash
/opt/Xilinx/Vivado/2020.1/bin/vivado
---------------------------------
sudo chmod +x vivado

sudo gedit vitis
---------------------------------
#!/bin/bash
/opt/Xilinx/Vitis/2020.1/bin/vitis 
---------------------------------
sudo chmod +x vitis


sudo apt install ant ant-optional antlr bnd default-jdk-doc groovy groovy-doc ivy junit4 libaopalliance-java libbcel-java libbcpg-java libbcprov-java libbindex-java libbsf-java libcdi-api-java libcommons-codec-java libcommons-collections3-java libcommons-io-java libcommons-lang-java libcommons-lang3-java libdd-plist-java libdom4j-java libfelix-framework-java libfelix-gogo-runtime-java libfelix-osgi-obr-java libfelix-resolver-java libfindbugs-java libgeronimo-annotation-1.3-spec-java libgeronimo-interceptor-3.0-spec-java libgoogle-gson-java libgpars-groovy-java libgradle-core-java libgradle-plugins-java libguice-java libhamcrest-java libhttpclient-java libhttpcore-java libjarjar-java libjatl-java libjavaewah-java libjaxen-java libjaxp1.3-java libjcifs-java libjcip-annotations-java libjcommander-java libjcsp-java libjformatstring-java libjgit-java libjsch-java libjsoup-java libjsr166y-java libkryo-java libkxml2-java liblogback-java libmaven-parent-java libmaven-resolver-java libmaven-shared-utils-java libmaven3-core-java libminlog-java libmultiverse-core-java libnative-platform-java libnative-platform-jni libnekohtml-java libobjenesis-java libosgi-annotation-java libosgi-compendium-java libosgi-core-java libplexus-cipher-java libplexus-classworlds-java libplexus-component-annotations-java libplexus-container-default-java libplexus-container-default1.5-java libplexus-interpolation-java libplexus-sec-dispatcher-java libplexus-utils-java libplexus-utils2-java libpolyglot-maven-java libqdox-java libreflectasm-java librhino-java libservlet3.1-java-doc libsimple-http-java libsisu-inject-java libsisu-plexus-java libwagon-file-java libwagon-http-java libwagon-provider-api-java libxalan2-java libxbean-reflect-java libxerces2-java libxml-commons-external-java libxml-commons-resolver1.1-java libxpp3-java libxstream-java libyaml-snake-java linux-hwe-5.4-headers-5.4.0-72 openjdk-11-doc testng


sudo apt install linux-headers-5.4.0-73-generic linux-hwe-5.4-headers-5.4.0-73 linux-image-5.4.0-73-generic linux-modules-5.4.0-73-generic linux-modules-extra-5.4.0-73-generic

apt list --upgradable





sudo apt install iverilog verilator gtkwave yosys yosys-doc graphviz graphviz-doc


sudo apt-get install build-essential clang bison flex \
	libreadline-dev gawk tcl-dev libffi-dev git \
	graphviz xdot pkg-config python3 libboost-system-dev \
	libboost-python-dev libboost-filesystem-dev zlib1g-dev


秒表
sudo apt-get install orage stopwatch gnome-clocks

sudo apt-get install inkscape dia


sudo apt-get install qt4-demos
The following NEW packages will be installed:
  libqt4-declarative-gestures libqt4-declarative-particles libqt4-designer libqt4-dev libqt4-dev-bin libqt4-help libqt4-opengl-dev libqt4-qt3support libqt4-scripttools libqt4-test qt4-demos qt4-designer
  qt4-dev-tools qt4-doc qt4-linguist-tools qt4-qmake


sudo apt-get install libsqlite0-dev qt4-qmlviewer qt4-doc-html





qt-everywhere-src-5.15.2

ubuntu18.04/static_gcc

./configure -confirm-license -opensource -platform linux-g++ -c++std c++11 -static -release -fontconfig -system-freetype -opengl desktop -pkg-config -dbus-linked  -ltcg -prefix /opt/Qt5.15_static OPENSSL_LIBS="-lssl -lcrypto -ldl -lpthread" -qt-sqlite -qt-pcre -plugin-sql-sqlite -qt-zlib -qt-harfbuzz -qt-libpng -qt-libjpeg -qt-libpng -qt-tiff -qt-webp -skip qtwayland -skip qtscript -no-compile-examples

gmake -j$(nproc)
gmake install


sudo apt-get install libz-mingw-w64 libz-mingw-w64-dev libgcrypt-mingw-w64-dev ocaml-mingw-w64 ocaml-mingw-w64-x86-64 ocaml-mingw-w64-i686


https://launchpad.net/~cybermax-dexter/+archive/ubuntu/mingw-w64-backport
sudo add-apt-repository ppa:cybermax-dexter/mingw-w64-backport
sudo apt-get update
sudo apt-get upgrade

sudo aptitude install gcc-mingw-w64-base
      Remove the following packages:                                          
1)      g++-mingw-w64 [9.3.0-11ubuntu0~18.04.1+22~exp1ppa5 (bionic, now)]     
2)      g++-mingw-w64-i686 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]         
3)      g++-mingw-w64-x86-64 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]       
4)      gcc-mingw-w64 [9.3.0-11ubuntu0~18.04.1+22~exp1ppa5 (bionic, now)]     
5)      gcc-mingw-w64-i686 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]         
6)      gcc-mingw-w64-x86-64 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]       
7)      gfortran-mingw-w64 [9.3.0-11ubuntu0~18.04.1+22~exp1ppa5 (bionic, now)]
8)      gfortran-mingw-w64-i686 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]    
9)      gfortran-mingw-w64-x86-64 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]  
10)     gnat-mingw-w64 [9.3.0-11ubuntu0~18.04.1+22~exp1ppa5 (bionic, now)]    
11)     gnat-mingw-w64-i686 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]        
12)     gnat-mingw-w64-x86-64 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]      
13)     gobjc++-mingw-w64 [9.3.0-11ubuntu0~18.04.1+22~exp1ppa5 (bionic, now)] 
14)     gobjc++-mingw-w64-i686 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]     
15)     gobjc++-mingw-w64-x86-64 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]   
16)     gobjc-mingw-w64 [9.3.0-11ubuntu0~18.04.1+22~exp1ppa5 (bionic, now)]   
17)     gobjc-mingw-w64-i686 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]       
18)     gobjc-mingw-w64-x86-64 [7.3.0-11ubuntu1+20.2build1 (bionic, now)]     
19)     mingw-w64 [8.0.0-1ppa1 (bionic, now)] 



sudo apt-get install g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64
sudo aptitude install gcc-mingw-w64 mingw-w64 
libgcc-s1 (>= 4.2) which is a virtual package and is not provided by any available package

download gcc-10-base
wget http://mirrors.edge.kernel.org/ubuntu/pool/main/g/gcc-10/gcc-10-base_10-20200411-0ubuntu1_amd64.deb
download libgcc-s1
wget http://mirrors.xmission.com/ubuntu/pool/main/g/gcc-10/libgcc-s1_10-20200411-0ubuntu1_amd64.deb


sudo aptitude install mingw-w64 gcc-mingw-w64
The following NEW packages will be installed:
  g++-mingw-w64{a} g++-mingw-w64-i686{a} g++-mingw-w64-x86-64{a} gcc-mingw-w64 gcc-mingw-w64-i686{a} gcc-mingw-w64-xmingw-w6486-64{a} mingw-w64


sudo apt-get install g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64 gdb-mingw-w64
ok

sudo apt-get install mingw-w64-common mingw-w64-tools mingw-w64-x86-64-dev  mingw-w64-i686-dev mingw-ocaml


这个版本也是Thread model: win32
不是POSIX，会报错‘mutex’ is not a member of ‘QtPrivate’ 之类

Always build with -nomake tests -nomake examples especially when doing a static build
也还是报这个错

sudo apt-get purge mingw-w64-common mingw-w64-tools mingw-w64-x86-64-dev  mingw-w64-i686-dev mingw-ocaml gcc-mingw-w64-base
sudo apt-get purge g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64 gdb-mingw-w64

恢复 7.3 的 mingw-w64
sudo apt-get install libgcc1 --reinstall
sudo apt remove gcc-10-base
sudo apt remove g++-mingw-w64* g++-mingw-w64-i686* g++-mingw-w64-x86-64* gcc-10-base* gcc-mingw-w64* gcc-mingw-w64-i686* gcc-mingw-w64-x86-64* gfortran-mingw-w64* gfortran-mingw-w64-i686* gfortran-mingw-w64-x86-64* gnat-mingw-w64* gnat-mingw-w64-i686* gnat-mingw-w64-x86-64* gobjc++-mingw-w64* gobjc++-mingw-w64-i686* gobjc++-mingw-w64-x86-64* gobjc-mingw-w64* gobjc-mingw-w64-i686* gobjc-mingw-w64-x86-64* libgcc-s1* mingw-w64* gcc-mingw-w64-base
sudo apt-get install g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64 gdb-mingw-w64 mingw-w64-common mingw-w64-tools mingw-w64-x86-64-dev  mingw-w64-i686-dev mingw-ocaml gcc-mingw-w64-base binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64  gcc-mingw-w64-base g++-mingw-w64 gcc-mingw-w64 binutils-mingw-w64 gdb-mingw-w64 gdb-mingw-w64-target gfortran-mingw-w64 gfortran-mingw-w64-i686 gfortran-mingw-w64-x86-64 gnat-mingw-w64 gnat-mingw-w64-i686 gnat-mingw-w64-x86-64 gobjc++-mingw-w64 gobjc++-mingw-w64-i686 gobjc++-mingw-w64-x86-64 gobjc-mingw-w64 gobjc-mingw-w64-i686 gobjc-mingw-w64-x86-64 mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-tools mingw-w64-x86-64-dev libz-mingw-w64 libz-mingw-w64-dev libgcrypt-mingw-w64-dev ocaml-mingw-w64 ocaml-mingw-w64-x86-64 ocaml-mingw-w64-i686 g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64

sudo apt-get install linux-headers-5.4.0-74-generic linux-hwe-5.4-headers-5.4.0-74 linux-image-5.4.0-74-generic linux-modules-5.4.0-74-generic
保留老内核












目前libmysqlclient-dev libmysqlclient20不更新/安装，其他apt未报错


tar 命令显示进度条
sudo apt-get install pv

解压
pv question.tar.gz | tar -zxf -
pv qt-everywhere-src-5.15.2.tar.xz | tar -Jxpf -

压缩
tar -cf - questions.sql | pv -s $(du -sk questions.sql | awk '{print $1}') | gzip > question.tar.gz
tar -cf - questions.sql | pv -s $(($(du -sk questions.sql | awk '{print $1}') * 1024)) | gzip > question.tar.gz




sudo apt install qtdeclarative5-dev qml-module-qtquick-scene2d qml-module-qtquick-scene3d qmlscene
sudo apt install lldb
qt4
/usr/lib/x86_64-linux-gnu/qt4/bin/qmake
qt5
/usr/lib/qt5/bin/qmake
qt5_static
/opt/Qt5.15_static/bin/qmake







sudo add-apt-repository ppa:savoury1/backports
sudo apt-get update
sudo apt-get upgrade



sudo apt install libmpc3 libmpc-dev


sudo apt install meson ninja-build

sudo apt install --reinstall bash-completion


sudo apt install libarchive-tools
sudo dpkg -i makepkg_all_6.0.0-3.1.deb
sudo dpkg -i makedeb_all_5.9.1-1.deb






重新打包deb

mkdir extract
mkdir extract/DEBIAN
mkdir build
dpkg -X mingw-w64-binutils_2.36.1-1_amd64.deb extract
dpkg -e mingw-w64-binutils_2.36.1-1_amd64.deb extract/DEBIAN/
这里修改deb包内容
打包出deb(从已有的可以执行文件，同样按照这个方法可以打包出deb)
dpkg-deb -b extract/ build/
生成的deb在build目录




从源码编译生成deb包

方法一: 使用checkinstall方法创建deb包
checkinstall不仅可以生成deb包，还可以生成rpm包，使用简单，但是不灵活，功能粗糙，只做介绍，不推荐使用
目录格式要求是x.x.x 这样的版本格式，其中x为数字

example1： 
$ tar xvjf fceu-0.98.12.src.tar.bz2 // 解包
$ cd fceu;./configure;make // 编译
$ checkinstall -D -y -install=no --pkgversion-0.98 --pkgname=fceuxy --pkgcource=./ --showinstall=no -default make install // 制作deb包
此时当前目录下生成了deb包

example2： 
cd xxx-1.0
make distclean
./configure
make
checkinstall -D -y --install=no --pkgversion=1.0 --maintainer=xxx@yyy.com --requires=libc6,libnessus2,libssl0.9.8,bison,libxml2,libcurl3,libinotifytools0
--requires指定依赖的包，这里需要注意两个包的名字之间没有空格


checkinstall详细例程
https://www.ibm.com/developerworks/cn/linux/l-cn-checkinstall/index.html

方法二: 使用dpkg方法创建deb包
dpkg是最基本的制作deb包的方法，推荐使用

example1： 非debian修改源码
$ tar xvjf fceu-0.98.12.src.tar.bz2 // 解包
$ mv fceu fceu-0.98 // 改目录名为 包名-版本号
$ cd fceu-0.98
$ dh_make -s -e xieyan0811@sina.com.cn -f ../fceu-0.98.12.src.tar.bz2 // 生成制作deb包所需的默认信息， 这里的-s是single binary的意思，我一般都是制作single binary，不给出的话会让你选择[s/i/m/l/k/n/b]

此时当前目录下生成了debian目录，此时通常修改两个文件：
　　修改debian/control文件，配置你的信息，具体字段见参考部分
　　修改debian/rules脚本，它决定编译参数(也可以不改)，文件末尾要以空行结束
        比如修改override_dh_auto_configure:
         ./configure --prefix=/opt/xxx --enable-static

意思是覆盖默认的 ./configure 行为
$ dpkg-buildpackage -rfakeroot
此时可以看到，上一层目录(../)中已建立了deb包

官方的debian制作手册（比较长）
https://www.debian.org/doc/manuals/maint-guide/index.zh-cn.html


example2：
# cd c-icap-0.2.2
# ./configure --enable-static --prefix=/opt/c-icap
# make dist
将会把源码打包为 c-icap-0.2.2.tar.gz
# mv c-icap-0.2.2.tar.gz ..
# dh_make -f ../c-icap-0.2.2.tar.gz
将会在本目录生成 debian 目录，里面是 deb 包的模板。
修改 debian 里的 rules 文件，在文件最后追加下列内容，文件末尾要以空行结束：
override_dh_auto_configure:
 ./configure --prefix=/opt/c-icap --enable-static
意思是覆盖默认的 ./configure 行为。最后，生成 deb 安装包：
dpkg-buildpackage
deb 文件将被生成在父目录下。

example3：
生成 zlib 的 deb 安装包
由于 zlib 的源码包不支持 make dist 进行源码打包，所以步骤有所变更：
1. 生成模板：
# cd zlib-1.2.7
# dh_make -native
2. 修改 debian/rules 文件，覆盖默认的 ./configure 行为：
override_dh_auto_configure:
 ./configure --prefix=/opt/zlib
3. 生成 deb 安装包：
# dpkg-buildpackage
注意：为 squid 生成 deb 包时，需要安装 cppuint：
apt-get install libcppunit-dev


example4：经过debian修改源码
git_2.11.0.orig.tar.xz
git_2.11.0-3+deb9u5.debian.tar.xz
git_2.11.0-3+deb9u5.dsc
sudo apt-get install dh-exec dh-apache2
dpkg-source -x git_2.11.0-3+deb9u5.dsc
cd git-2.11.0
dpkg-buildpackage -rfakeroot -uc -b

这里'-rfakeroot'指定命令使用fakeroot程序来模仿root权限(来实现所有者(ownership)目的)，'-uc'表示"Don't cryptographically sign the changelog"，'-b'代表只建立二进制包。



example5：直接拉取仓库里的源码
apt-get source git
修改debian/control
Replace all the occurences of “libcurl4-gnutls-dev” to “libcurl4-openssl-dev”
修改debian/rules
delete the line “TEST =test”
sudo dpkg-buildpackage -rfakeroot -b
sudo dpkg -i git_... 


方法三: 模仿makepkg的工具
makedeb 或者 unipkg
最简单，编写或修改PKGBUILD文件

比如安装makedeb
makedeb_all_5.9.1-1.deb
依赖
makepkg_all_6.0.0-3.1.deb
makepkg 需要 bash4.4以上才支持 local -
官方的PPA仓库bash源码， 16.04 Xenial 只到 4.3
https://launchpad.net/ubuntu/+source/bash
下面有可选PPA仓库
比如https://launchpad.net/~savoury1/+archive/ubuntu/backports就很合适
更新bash
sudo add-apt-repository ppa:savoury1/backports
sudo apt-get update
sudo apt-get upgrade 
bash --version

获得合适的cflags和cxxflags
python3-config --cflags
修改cflags和cxxflags到
/etc/makepkg.conf

修改/etc/makepkg.conf的
#MAKEFLAGS="-j2"
为
MAKEFLAGS="-j$(nproc)"

另外修改/usr/bin/makedeb
DEFAULT VALUES的
export INSTALL='FALSE'
换到793行去，防止configure找不到install工具路径(可以看config.log是否有/usr/bin/install，不能是0,否则无法生成deb，对比直接用makepkg的config.log)

可以在arch包网址或者AUR获得参照的PKGBUILD文件
这样基本上可以用makedeb编译出deb包


arch转换到deb包
从makedeb修改出了凑合用的convert_arch_to_deb
跳过编译，但是还是需要PKGBUILD文件提供少量信息
由于arch的基本库如glibc什么的，还有编译器，都比ubuntu/debian的LTS版本新，所以很多转换的包都无法运行，
从arch迁移软件到deb系列，主要还是用源码编译靠谱。
反之，从deb迁移到arch（debtap 或者 makepkg配合PKGBUILD文件 都可以进行这种转换），基本上都能直接用。


将rpm包转为deb包 
使用alien
fakeroot alien name.rpm



为避免麻烦，尽量升级gcc
sudo update-alternatives --config gcc
update-alternatives: error: no alternatives for gcc

sudo apt-get install -y \
                   g++-8 \
                   gcc-8 \
                   libc-dev \
                   make \
                   xz-utils \
                   ca-certificates \
                   libtool \
                   pkg-config \
                   wget
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 10
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 10
sudo apt install gnat-8



mingw-w64编译顺序
1.mingw-w64-headers
mingw-w64编译好之后安装问题
sudo aptitude remove gcc-mingw-w64-i686
The following packages will be REMOVED:
  binutils-mingw-w64-i686{u} g++-mingw-w64{a} g++-mingw-w64-i686{a} gcc-mingw-w64{a} gcc-mingw-w64-i686 libgeos-3.6.2{u} libntfs-3g88{u} libsensors4:i386{u} mingw-w64{a} mingw-w64-i686-dev{u} 
sudo dpkg -i mingw-w64-headers_9.0.0-2_all.deb

2.mingw-w64-binutils
3.mingw-w64-gcc fail
4.mingw-w64-crt fail
5.mingw-w64-winpthreads fail




sudo add-apt-repository ppa:savoury1/build-tools
sudo apt-get update
安装7.5版本（原始是7.3，比较新那个是8.3)

sudo apt-get install libgcc1 --reinstall
sudo apt remove gcc-10-base
sudo apt remove g++-mingw-w64* g++-mingw-w64-i686* g++-mingw-w64-x86-64* gcc-10-base* gcc-mingw-w64* gcc-mingw-w64-i686* gcc-mingw-w64-x86-64* gfortran-mingw-w64* gfortran-mingw-w64-i686* gfortran-mingw-w64-x86-64* gnat-mingw-w64* gnat-mingw-w64-i686* gnat-mingw-w64-x86-64* gobjc++-mingw-w64* gobjc++-mingw-w64-i686* gobjc++-mingw-w64-x86-64* gobjc-mingw-w64* gobjc-mingw-w64-i686* gobjc-mingw-w64-x86-64* libgcc-s1* mingw-w64* gcc-mingw-w64-base
sudo apt-get install g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64 gdb-mingw-w64 mingw-w64-common mingw-w64-tools mingw-w64-x86-64-dev  mingw-w64-i686-dev mingw-ocaml gcc-mingw-w64-base binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64  gcc-mingw-w64-base g++-mingw-w64 gcc-mingw-w64 binutils-mingw-w64 gdb-mingw-w64 gdb-mingw-w64-target gfortran-mingw-w64 gfortran-mingw-w64-i686 gfortran-mingw-w64-x86-64 gnat-mingw-w64 gnat-mingw-w64-i686 gnat-mingw-w64-x86-64 gobjc++-mingw-w64 gobjc++-mingw-w64-i686 gobjc++-mingw-w64-x86-64 gobjc-mingw-w64 gobjc-mingw-w64-i686 gobjc-mingw-w64-x86-64 mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-tools mingw-w64-x86-64-dev libz-mingw-w64 libz-mingw-w64-dev libgcrypt-mingw-w64-dev ocaml-mingw-w64 ocaml-mingw-w64-x86-64 ocaml-mingw-w64-i686 g++-mingw-w64 gcc-mingw-w64 gfortran-mingw-w64 gnat-mingw-w64 gobjc++-mingw-w64 gobjc-mingw-w64 mingw-w64 gcc-mingw-w64





sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 1
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 1
sudo update-alternatives --config gcc
sudo update-alternatives --config g++





静态编译的qt程序无法运行
$ QT_DEBUG_PLUGINS=1 ./HelloWorld 
QFactoryLoader::QFactoryLoader() ignoring "org.qt-project.Qt.QPA.QPlatformIntegrationFactoryInterface.5.3" since plugins are disabled in static builds
qt.qpa.plugin: Could not find the Qt platform plugin "xcb" in ""
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.
Aborted (core dumped)

sudo apt install xcb libqt5dxcb-plugin  qt5dxcb-plugin
没有啥用

cat /usr/lib/x86_64-linux-gnu/qt5/qt.conf
/usr/lib/x86_64-linux-gnu/qt5/plugins

sudo apt install libxkbcommon-dev
sudo apt install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev




office project
安装openproj
安装
Download openproj from http://sourceforge.net/projects/openproj/ Yes, you can only download the rpm file. But you can also install it in Ubuntu via alien. sudo apt-get install alien sudo alien -i openproj.rpm
错误
Your Java vendor is "Oracle Corporation". To run OpenProj, you need the Sun Java implementation. The auto-detected Java Runtime used is..
解决办法
修改$HOME/.openproj/run.conf，将JAVA_OPTS="-Xms128m -Xmx768m"改为JAVA_OPTS="-Djava.vendor=Sun -Xms128m -Xmx768m"，
[也可也修改/usr/bin/openproj脚本的
run_openproj() {

if [ "$LOG_LEVEL" ] && [ "x$LOG_LEVEL" = "xDEBUG" ]; then
    "$JAVA_EXE" $JAVA_OPTS -Djava.vendor="Sun Microsystems Inc."  -jar "$OPENPROJ_HOME/openproj.jar" $ARGS > "$LOG_FILE"
else
    "$JAVA_EXE" $JAVA_OPTS -Djava.vendor="Sun Microsystems Inc."  -jar "$OPENPROJ_HOME/openproj.jar" $ARGS > /dev/null 2>&1
fi
}
]

sudo gedit /usr/bin/openproj
在头部添加
export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_291/
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib
export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin

我这里安装了jdk8,实际上也还是能用。


不过呢，用wps的et，group功能也是个简单的project工具嘛








HDL opencv_gcc 报错 libpng12.so.0 => not found

andreas@Vostro-5880:/opt/Xilinx/Vivado/2018.3/lnx64/tools/opencv/opencv_gcc
$ ldd libopencv_highgui.so
	linux-vdso.so.1 (0x00007fff3d908000)
	libgtk3-nocsd.so.0 => /usr/lib/x86_64-linux-gnu/libgtk3-nocsd.so.0 (0x00007f896412f000)
	libopencv_core.so.2.4 (0x00007f8963cb5000)
	libopencv_imgproc.so.2.4 (0x00007f89637c8000)
	libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f89635c4000)
	libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f89633a5000)
	librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f896319d000)
	libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f8962f80000)
	libjpeg.so.62 => /usr/lib/x86_64-linux-gnu/libjpeg.so.62 (0x00007f8962d5c000)
	libpng12.so.0 => not found
	libOpenCL.so.1 => /usr/local/cuda/targets/x86_64-linux/lib/libOpenCL.so.1 (0x00007f8962b55000)
	libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f89627b7000)
	libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f896242e000)
	libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f8962216000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8961e25000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f896473b000)

$ locate libpng12.so.0
/opt/MATLAB/R2010b/bin/glnxa64/libpng12.so.0
/opt/MATLAB/R2010b/bin/glnxa64/libpng12.so.0.39.0
/opt/MATLAB/R2010b/toolbox/sl3d/orbisnap/bin/glnxa64/libpng12.so.0
/opt/MATLAB/R2010b/toolbox/sl3d/orbisnap/bin/glnxa64/libpng12.so.0.39.0
/opt/MATLAB/R2017b/bin/glnxa64/libpng12.so.0
/opt/MATLAB/R2017b/bin/glnxa64/libpng12.so.0.39.0
/opt/MATLAB/R2017b/toolbox/sl3d/orbisnap/bin/glnxa64/libpng12.so.0
/opt/MATLAB/R2017b/toolbox/sl3d/orbisnap/bin/glnxa64/libpng12.so.0.39.0
/opt/kingsoft/wps-office/office6/libpng12.so.0
/opt/kingsoft/wps-office/office6/libpng12.so.0.50.0
/opt/modelsim/modeltech/lib/libpng12.so.0
/opt/modelsim/modeltech/lib/libpng12.so.0.50.0
/opt/modelsim/modeltech/linux_x86_64/libpng12.so.0
/opt/modelsim/modeltech/linux_x86_64/libpng12.so.0.50.0
/opt/uex/bin/libpng12.so.0
/opt/uex/bin/libpng12.so.0.46.0
/opt/uex4/bin/libpng12.so.0
/opt/uex4/bin/libpng12.so.0.46.0


cp /opt/uex/bin/libpng12.so.0 .
cp /opt/uex/bin/libpng12.so.0.46.0 .

ok，反正可以用了





apt list --upgradable
sudo apt upgrade
报错
$ sudo apt --fix-broken install
Reading package lists... Done
Building dependency tree       
Reading state information... Done
Correcting dependencies... Done
The following additional packages will be installed:
  libegl-dev libgl-dev libglx-dev
The following NEW packages will be installed:
  libegl-dev libgl-dev libglx-dev
0 upgraded, 3 newly installed, 0 to remove and 64 not upgraded.
7 not fully installed or removed.
Need to get 0 B/137 kB of archives.
After this operation, 1,599 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
(Reading database ... 713247 files and directories currently installed.)
Preparing to unpack .../libglx-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb ...
Unpacking libglx-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
dpkg: error processing archive /var/cache/apt/archives/libglx-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb (--unpack):
 trying to overwrite '/usr/include/GL/glx.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
Preparing to unpack .../libgl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb ...
Unpacking libgl-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
dpkg: error processing archive /var/cache/apt/archives/libgl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb (--unpack):
 trying to overwrite '/usr/include/GL/gl.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg-deb: error: paste subprocess was killed by signal (Broken pipe)
Preparing to unpack .../libegl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb ...
Unpacking libegl-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
dpkg: error processing archive /var/cache/apt/archives/libegl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb (--unpack):
 trying to overwrite '/usr/include/EGL/egl.h', which is also in package libegl1-mesa-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
Errors were encountered while processing:
 /var/cache/apt/archives/libglx-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb
 /var/cache/apt/archives/libgl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb
 /var/cache/apt/archives/libegl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb
E: Sub-process /usr/bin/dpkg returned an error code (1)
andreas@Vostro-5880:~
$ sudo dpkg -i --force-all /var/cache/apt/archives/libglx-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb
(Reading database ... 713247 files and directories currently installed.)
Preparing to unpack .../libglx-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb ...
Unpacking libglx-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/GL/glx.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/GL/glxext.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
Setting up libglx-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
andreas@Vostro-5880:~
$ sudo dpkg -i --force-all /var/cache/apt/archives/libgl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb
(Reading database ... 713254 files and directories currently installed.)
Preparing to unpack .../libgl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb ...
Unpacking libgl-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/GL/gl.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/GL/glcorearb.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/GL/glext.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/KHR/khrplatform.h', which is also in package mesa-common-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
Setting up libgl-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
andreas@Vostro-5880:~
$ sudo dpkg -i --force-all /var/cache/apt/archives/libegl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb
(Reading database ... 713261 files and directories currently installed.)
Preparing to unpack .../libegl-dev_1.3.2-1~ubuntu0.18.04.1sav1_amd64.deb ...
Unpacking libegl-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/EGL/egl.h', which is also in package libegl1-mesa-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/EGL/eglext.h', which is also in package libegl1-mesa-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/include/EGL/eglplatform.h', which is also in package libegl1-mesa-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
dpkg: warning: overriding problem because --force enabled:
dpkg: warning: trying to overwrite '/usr/lib/x86_64-linux-gnu/pkgconfig/egl.pc', which is also in package libegl1-mesa-dev:amd64 20.0.8-0ubuntu1~18.04.1sav0
Setting up libegl-dev:amd64 (1.3.2-1~ubuntu0.18.04.1sav1) ...

sudo apt --fix-broken install
sudo apt upgrade
apt list --upgradable


libfilezilla0
libfilezilla13
libhfstospell9 
libhfstospell11

sudo apt-get install ufraw gimp-ufraw


修复matlab2010b

/opt/MATLAB/R2010b/bin/util/oscheck.sh
ver=`/lib64/libc.so.6 | head -n 1 | sed -e "s/^[^0-9]*//" -e "s/[ ,].*$//"`
==> ver=`getconf GNU_LIBC_VERSION | awk '{print $2}'`
ver=`/lib/libc.so.6 | head -n 1 | sed -e "s/^[^0-9]*//" -e "s/[ ,].*$//"`
==> ver=`getconf GNU_LIBC_VERSION | awk '{print $2}'`


ldd /opt/MATLAB/R2010b/bin/glnxa64/MATLAB
sudo apt install apt-file
sudo apt update
apt-file search libXp.so.6
无
https://askubuntu.com/questions/944838/libxp-so-6-missing-for-ubuntu-17-04
可以用libXpm.so替代 sudo ln -s libXpm.so.4.11.0 libXp.so.6
为了迁移可用，复制过来
cp /usr/lib/x86_64-linux-gnu/libXpm.so.4.11.0 /opt/MATLAB/R2010b/bin/glnxa64/libXp.so.6
成功修复



编译产生 tty0tty-git_xxx.deb
----------------------------------------------------
# Maintainer: foo <foo(at)gmail(dot)com>
# Contributor: bar <bar(at)gmai(dot)com>

_pkgbase=tty0tty
pkgname=tty0tty-git
pkgver=1.2.r25.g5f8d18d
pkgrel=1
pkgdesc="tty0tty Virtual Serial Cable (DKMS)"
arch=('i686' 'x86_64')
url="https://github.com/freemed/tty0tty"
license=('GPL2/Apache2')
depends=('dkms')
conflicts=("${_pkgbase}")
source=("git+https://github.com/freemed/tty0tty"
        "95-tty0tty.rules"
        "tty0tty.conf"
	"postinst"
	"prerm"
        )
sha256sums=("SKIP" "SKIP" "SKIP" "SKIP" "SKIP")

pkgver() {
  cd ${_pkgbase}
  git describe --tags | sed 's/-/.r/; s/-/./'
}

build() {
  cd ${_pkgbase}
}

package() {
  # Install
  msg2 "Copying DKMS module..."

  # Copy dkms.conf
  install -Dm644 "${_pkgbase}"/debian/tty0tty-dkms.dkms "${pkgdir}"/usr/src/${_pkgbase}-${pkgver}/dkms.conf
  install -Dm644 "${srcdir}/95-tty0tty.rules" -t "${pkgdir}/etc/udev/rules.d/"
  install -Dm644 "${srcdir}/tty0tty.conf" -t "${pkgdir}/etc/modules-load.d/"
  install -Dm644 "${_pkgbase}"/README -t "${pkgdir}/usr/share/doc/tty0tty/"
  install -Dm755 "${srcdir}"/postinst -t "${pkgdir}/DEBIAN/"
  install -Dm755 "${srcdir}"/prerm -t "${pkgdir}/DEBIAN/"

  # Set name and version
  sed -e "s/\#MODULE_VERSION\#/${pkgver}/" \
      -i "${pkgdir}"/usr/src/${_pkgbase}-${pkgver}/dkms.conf
  sed -e "s/\#MODULE_VERSION\#/${pkgver}/" \
      -i "${pkgdir}"/DEBIAN/postinst
  sed -e "s/\#MODULE_VERSION\#/${pkgver}/" \
      -i "${pkgdir}"/DEBIAN/prerm

  # Copy sources (including Makefile)
  cp -r ${_pkgbase}/module/* "${pkgdir}"/usr/src/${_pkgbase}-${pkgver}/
}
------------------------------------------------------

下面是手动 添加、编译、删除 模块操作，上面添加了 postinst 和 prerm 脚本，制作出的包实际上就 不用 手动操作 (而 arch 就由pacman提供 post hook 来实现类似的功能 却不用在 制作arch包的时候提供， arch 大法好！ )

更新内核模块的依赖
ls /usr/src/tty0tty-1.2.r25.g5f8d18d/

	$ sudo dkms add -m tty0tty -v 1.2.r25.g5f8d18d 

	Creating symlink /var/lib/dkms/tty0tty/1.2.r25.g5f8d18d/source ->
		         /usr/src/tty0tty-1.2.r25.g5f8d18d

	DKMS: add completed.

	$ sudo dkms build -m tty0tty -v 1.2.r25.g5f8d18d

	Kernel preparation unnecessary for this kernel.  Skipping...

	Building module:
	cleaning build area...
	make -j16 KERNELRELEASE=5.4.0-80-generic -C /lib/modules/5.4.0-80-generic/build M=/var/lib/dkms/tty0tty/1.2.r25.g5f8d18d/build...
	Signing module:
	 - /var/lib/dkms/tty0tty/1.2.r25.g5f8d18d/5.4.0-80-generic/x86_64/module/tty0tty.ko
	Secure Boot not enabled on this system.
	cleaning build area...

	DKMS: build completed.


- 编译所有已经注册的模块？？
# dkms install
//sudo dkms autoinstall -k      （看起来啥也没有输出）
输出更多信息
sudo dkms --debug autoinstal

	$ sudo dkms install -m tty0tty -v 1.2.r25.g5f8d18d

	tty0tty:
	Running module version sanity check.
	 - Original module
	   - No original module exists within this kernel
	 - Installation
	   - Installing to /lib/modules/5.4.0-80-generic/updates/dkms/

	depmod...

	DKMS: install completed.



arch有/usr/share/libalpm/hooks/70-dkms-install.hook


- 使dkms服务自动启动？？没有，1804不存在这个玩意
# systemctl enable dkms.service



- 显示所有模块的状态，ok
# dkms status
	$ dkms status
	nvidia, 460.32.03, 5.4.0-73-generic, x86_64: installed
	nvidia, 460.32.03, 5.4.0-74-generic, x86_64: installed
	nvidia, 460.32.03, 5.4.0-77-generic, x86_64: installed
	nvidia, 460.32.03, 5.4.0-80-generic, x86_64: installed
	tty0tty, 1.2.r25.g5f8d18d, 5.4.0-80-generic, x86_64: installed


- 移除一个内核模块
# dkms remove -m XXXXX -v 331.49 --all
# dkms remove XXXXX/331.49 --all
	$ sudo dkms remove -m tty0tty -v 1.2.r25.g5f8d18d --all

	-------- Uninstall Beginning --------
	Module:  tty0tty
	Version: 1.2.r25.g5f8d18d
	Kernel:  5.4.0-80-generic (x86_64)
	-------------------------------------

	Status: Before uninstall, this module version was ACTIVE on this kernel.

	tty0tty.ko:
	 - Uninstallation
	   - Deleting from: /lib/modules/5.4.0-80-generic/updates/dkms/
	 - Original module
	   - No original module was found for this module on this kernel.
	   - Use the dkms install command to reinstall any previous module version.

	depmod...

	DKMS: uninstall completed.

	------------------------------
	Deleting module version: 1.2.r25.g5f8d18d
	completely from the DKMS tree.
	------------------------------
	Done.

- 查看有关文件
ls -l /var/lib/dkms/tty0tty/1.2.r25.g5f8d18d
ls /lib/modules/5.4.0-80-generic/updates/dkms/
ls /var/lib/dkms/tty0tty/1.2.r25.g5f8d18d/5.4.0-80-generic/x86_64/module/


DKMS注册和更新内核模块
sudo dkms add -m tty0tty -v 1.2.1
sudo /etc/kernel/postinst.d/dkms
==
sudo /usr/lib/dkms/dkms_autoinstaller start $(uname -r)

更新dkms模块(借鉴其他deb的postinst脚本)
	$ sudo /usr/lib/dkms/common.postinst tty0tty 1.2.r25.g5f8d18d
	Removing old tty0tty-1.2.r25.g5f8d18d DKMS files...

	-------- Uninstall Beginning --------
	Module:  tty0tty
	Version: 1.2.r25.g5f8d18d
	Kernel:  5.4.0-80-generic (x86_64)
	-------------------------------------

	Status: Before uninstall, this module version was ACTIVE on this kernel.

	tty0tty.ko:
	 - Uninstallation
	   - Deleting from: /lib/modules/5.4.0-80-generic/updates/dkms/
	 - Original module
	   - No original module was found for this module on this kernel.
	   - Use the dkms install command to reinstall any previous module version.

	depmod...

	DKMS: uninstall completed.

	------------------------------
	Deleting module version: 1.2.r25.g5f8d18d
	completely from the DKMS tree.
	------------------------------
	Done.
	Loading new tty0tty-1.2.r25.g5f8d18d DKMS files...
	Building for 5.4.0-80-generic
	Building initial module for 5.4.0-80-generic
	Secure Boot not enabled on this system.
	Done.

	tty0tty:
	Running module version sanity check.
	 - Original module
	   - No original module exists within this kernel
	 - Installation
	   - Installing to /lib/modules/5.4.0-80-generic/updates/dkms/

	depmod...

	DKMS: install completed.





更新内存盘镜像
$ sudo update-initramfs -u
update-initramfs: Generating /boot/initrd.img-5.4.0-80-generic









1604
sudo apt install qt5-default qt5-doc libqt5serialport5 libqt5qml5 qmlscene libqt5serialport5-dev qt4-default qt4-doc qt4-dev-tools qt4-designer qt4-demos




sudo pip3.6 install libscrc -i https://mirrors.163.com/pypi/simple


sudo apt install libqt4-dbus libqt4-declarative libqt4-designer libqt4-dev libqt4-dev-bin libqt4-help libqt4-network libqt4-opengl libqt4-opengl-dev libqt4-qt3support libqt4-script libqt4-scripttools libqt4-sql   libqt4-sql-mysql libqt4-svg libqt4-test libqt4-xml libqt4-xmlpatterns libqtcore4 libqtdbus4 libqtgui4 qdbus qt-at-spi qt4-linguist-tools qt4-qmake qtcore4-l10n

编译安装
qt4-serialport_4.8.7-2_amd64

PKGBUILD的Maintainer要符合 xx <yy@zz> 格式，最好是解包修改
----------------------------------------------------------------------
# Maintainer: Berk Demirkır <berk at demirkir dot me>

_pkgname=qt4-serialport
pkgname=$_pkgname
pkgver=4.8.7
pkgrel=2
arch=('x86_64')
url='https://www.qt.io'
license=('GPL3' 'LGPL' 'FDL' 'custom')
pkgdesc='Qt4 Serial Port support'
depends=('libqt4-dev')
makedepends=()
source=("$_pkgname::git://code.qt.io/qt/qtserialport.git#branch=qt4-dev")
sha256sums=('SKIP')

build() {
  cd "$srcdir/$_pkgname"

  qmake-qt4 qtserialport.pro
  make
}

package() {
  cd "$srcdir/$_pkgname"
  make INSTALL_ROOT="$pkgdir" install

  install -Dm644 LICENSE* -t "${pkgdir}"/usr/share/licenses/${pkgname}
  install -Dm644 LGPL* -t "${pkgdir}"/usr/share/licenses/${pkgname}
}
------------------------------------------------------------------------
makedeb










sudo apt install mono-runtime
sudo apt install mono-complete
http://dl.winehq.org/wine/wine-mono/4.9.4/wine-mono-4.9.4.msi
http://dl.winehq.org/wine/wine-gecko/2.47/wine_gecko-2.47-x86_64.msi
放到/home/ubuntu1804/.wine/的目录下面执行安装
wine   msiexec /i  wine-mono-4.9.4.msi
wine   msiexec /i  wine_gecko-2.47-x86_64.msi
wine   start /i  wine-mono-4.9.4.msi
wine   start /i  wine_gecko-2.47-x86_64.msi
都不成啊

sudo add-apt-repository ppa:ubuntu-wine/ppa
无效了呀

wget -O - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'
sudo apt update

https://wiki.winehq.org/Mono
https://wiki.winehq.org/Gecko
http://mirrors.ustc.edu.cn/wine/wine/wine-mono/
http://mirrors.ustc.edu.cn/wine/wine/wine-gecko/
https://dl.winehq.org/wine/wine-gecko/2.47/
https://dl.winehq.org/wine/wine-mono/

sudo apt-get  install wine
sudo apt-get  install winehq-staging

$ sudo apt remove wine64 wine-stable wine1.6 wine-development winetricks

$ sudo aptitude install winehq-staging
The following NEW packages will be installed:
  glib-networking:i386{a} i965-va-driver:i386{a} libatk-bridge2.0-0:i386{a} libatk1.0-0:i386{a} libatspi2.0-0:i386{a} libcairo-gobject2:i386{a} libcolord2:i386{a} libdatrie1:i386{a} libepoxy0:i386{a} 
  libgdk-pixbuf2.0-0:i386{a} libgraphite2-3:i386{a} libgtk-3-0:i386{a} libharfbuzz0b:i386{a} libjson-glib-1.0-0:i386{a} libpango-1.0-0:i386{a} libpangocairo-1.0-0:i386{a} libpangoft2-1.0-0:i386{a} 
  libproxy1v5:i386{a} librest-0.7-0:i386{a} libsdl2-2.0-0:i386{a} libsoup-gnome2.4-1:i386{a} libsoup2.4-1:i386{a} libthai0:i386{a} libva-drm2:i386{a} libva-x11-2:i386{a} libva2:i386{a} 
  libwayland-client0:i386{a} libwayland-cursor0:i386{a} libwayland-egl1:i386{a} libxcb-xfixes0:i386{a} libxkbcommon0:i386{a} libxss1:i386{a} mesa-va-drivers:i386{a} va-driver-all:i386{a} wine-staging{a} 
  wine-staging-amd64{a} wine-staging-i386:i386{ab} winehq-staging 
The following packages will be REMOVED:
  fuseiso{u} libwine{u} libwine-development{u} libwine-development:i386{u} wine32-development:i386{u} wine64-development{u} 


$ sudo apt remove fuseiso libwine-development libwine-development:i386 wine32-development:i386 wine64-development libwine



wget https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_18.04/amd64/libfaudio0_19.07-0~bionic_amd64.deb
$ sudo dpkg -i libfaudio0_19.07-0_bionic_amd64.deb
wget https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_18.04/i386/libfaudio0_19.07-0~bionic_i386.deb
$ sudo dpkg -i libfaudio0_19.07-0_bionic_i386.deb 
$ sudo apt install -f
Reading package lists... Done
Building dependency tree       
Reading state information... Done
Correcting dependencies... Done
The following packages were automatically installed and are no longer required:
  libcapi20-3 libosmesa6
Use 'sudo apt autoremove' to remove them.
The following additional packages will be installed:
  libegl-mesa0:i386 libegl1:i386 libgbm1:i386 libsdl2-2.0-0:i386
  libwayland-client0:i386 libwayland-cursor0:i386 libwayland-egl1:i386
  libwayland-egl1-mesa:i386 libwayland-server0:i386 libxcb-xfixes0:i386
  libxkbcommon0:i386 libxss1:i386
The following NEW packages will be installed:
  libegl-mesa0:i386 libegl1:i386 libgbm1:i386 libsdl2-2.0-0:i386
  libwayland-client0:i386 libwayland-cursor0:i386 libwayland-egl1:i386
  libwayland-egl1-mesa:i386 libwayland-server0:i386 libxcb-xfixes0:i386
  libxkbcommon0:i386 libxss1:i386
0 upgraded, 12 newly installed, 0 to remove and 9 not upgraded.

$ sudo aptitude install winehq-staging
The following NEW packages will be installed:
  glib-networking:i386{a} i965-va-driver:i386{a} libatk-bridge2.0-0:i386{a} libatk1.0-0:i386{a} libatspi2.0-0:i386{a} libcairo-gobject2:i386{a} libcolord2:i386{a} libdatrie1:i386{a} libepoxy0:i386{a} 
  libgdk-pixbuf2.0-0:i386{a} libgraphite2-3:i386{a} libgtk-3-0:i386{a} libharfbuzz0b:i386{a} libjson-glib-1.0-0:i386{a} libpango-1.0-0:i386{a} libpangocairo-1.0-0:i386{a} libpangoft2-1.0-0:i386{a} 
  libproxy1v5:i386{a} librest-0.7-0:i386{a} libsoup-gnome2.4-1:i386{a} libsoup2.4-1:i386{a} libthai0:i386{a} libva-drm2:i386{a} libva-x11-2:i386{a} libva2:i386{a} mesa-va-drivers:i386{a} 
  va-driver-all:i386{a} wine-staging{a} wine-staging-amd64{a} wine-staging-i386:i386{a} winehq-staging 
0 packages upgraded, 31 newly installed, 0 to remove and 9 not upgraded.


$ sudo apt install winetricks
The following NEW packages will be installed:
  fuseiso winetricks

$ sudo apt install mono-runtime
$ sudo apt install mono-complete





emulator: ERROR: unknown skin name 'nexus_10'
/opt/android-sdk/emulator/emulator -list-avds
/opt/android-sdk/emulator/emulator -avd Nexus_10_API_22
cd ~/.android/avd/Nexus_10_API_22.avd/
gedit config.ini


ioctl(KVM_CREATE_VM) failed: 16 Device or resource busy
rm /home/andreas/.android/avd/Nexus_10_API_22.avd/*.lock

$ /opt/android-sdk/emulator/emulator -avd Nexus_10_API_22
emulator: Android emulator version 30.7.5.0 (build_id 7491168) (CL:N/A)
emulator: WARNING: encryption is off
handleCpuAcceleration: feature check for hvf
cannot add library /opt/android-sdk/emulator/qemu/linux-x86_64/lib64/vulkan/libvulkan.so: failed
added library /opt/android-sdk/emulator/lib64/vulkan/libvulkan.so
ioctl(KVM_CREATE_VM) failed: 16 Device or resource busy
qemu-system-i386: failed to initialize KVM: Device or resource busy


sudo apt install libvulkan1 mesa-vulkan-drivers vulkan-utils
sudo apt install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils
sudo kvm-ok
折腾啥，新建一个最好了哇

$ /opt/android-sdk/emulator/emulator -avd Nexus_10_API_22 -verbose -qemu -serial /dev/tnt0
$ /opt/android-sdk/platform-tools/adb devices
List of devices attached
emulator-5554	device

$ /opt/android-sdk/platform-tools/adb -s emulator-5554 shell
root@generic_x86:/ # ls /dev/tty* -l

经测试是/dev/ttyS1被映射出来到host的/dev/tnt0





https://download-cdn.jetbrains.com/cpp/CLion-2021.2.tar.gz
https://download-cdn.jetbrains.com/idea/ideaIU-2021.2.tar.gz
sudo apt install netbeans
sudo apt install eclipse-platform
The following additional packages will be installed:
  eclipse-jdt eclipse-pde eclipse-platform-data eclipse-rcp fastjar jarwrapper
  libasm3-java libcommons-dbcp-java libcommons-httpclient-java
  libcommons-pool-java libdb-java libdb-je-java libdb5.3-java
  libdb5.3-java-jni libeasymock-java libecj-java
  libfelix-bundlerepository-java libfelix-gogo-command-java
  libfelix-gogo-shell-java libfelix-shell-java libfelix-utils-java
  libicu4j-4.2-java libicu4j-49-java libjavascriptcoregtk-1.0-0 libjetty9-java
  libjline-java libjtidy-java liblucene2-java libswt-cairo-gtk-3-jni
  libswt-glx-gtk-3-jni libswt-gtk-3-java libswt-gtk-3-jni
  libswt-webkit-gtk-3-jni libtomcat8-java libwebkitgtk-1.0-0 sat4j
Suggested packages:
  eclipse libcommons-dbcp-java-doc libcommons-httpclient-java-doc
  libeasymock-java-doc ecj libfelix-bundlerepository-java-doc
  libfelix-gogo-command-java-doc libfelix-gogo-shell-java-doc
  libfelix-shell-java-doc libfelix-utils-java-doc jetty9 libjline-java-doc
  libjtidy-java-doc tomcat8
Recommended packages:
  libswt-gnome-gtk-3-jni
The following NEW packages will be installed:
  eclipse-jdt eclipse-pde eclipse-platform eclipse-platform-data eclipse-rcp
  fastjar jarwrapper libasm3-java libcommons-dbcp-java
  libcommons-httpclient-java libcommons-pool-java libdb-java libdb-je-java
  libdb5.3-java libdb5.3-java-jni libeasymock-java libecj-java
  libfelix-bundlerepository-java libfelix-gogo-command-java
  libfelix-gogo-shell-java libfelix-shell-java libfelix-utils-java
  libicu4j-4.2-java libicu4j-49-java libjavascriptcoregtk-1.0-0 libjetty9-java
  libjline-java libjtidy-java liblucene2-java libswt-cairo-gtk-3-jni
  libswt-glx-gtk-3-jni libswt-gtk-3-java libswt-gtk-3-jni
  libswt-webkit-gtk-3-jni libtomcat8-java libwebkitgtk-1.0-0 sat4j
0 upgraded, 37 newly installed, 0 to remove and 9 not upgraded.
sudo apt install eclipse
这个eclipse不能运行啊

sudo apt purge eclipse*
sudo apt purge eclipse-platform*
The following packages were automatically installed and are no longer required:
  eclipse-rcp fastjar jarwrapper libasm3-java libcommons-httpclient-java
  libdb-java libdb-je-java libdb5.3-java libdb5.3-java-jni libeasymock-java
  libfelix-bundlerepository-java libfelix-gogo-command-java
  libfelix-gogo-shell-java libfelix-shell-java libfelix-utils-java
  libicu4j-4.2-java libicu4j-49-java libjavascriptcoregtk-1.0-0 libjline-java
  libjtidy-java liblucene2-java libswt-cairo-gtk-3-jni libswt-glx-gtk-3-jni
  libswt-gtk-3-java libswt-gtk-3-jni libswt-webkit-gtk-3-jni
  libwebkitgtk-1.0-0 sat4j


$ sudo apt install eclipse
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  eclipse-jdt eclipse-pde eclipse-platform eclipse-platform-data
The following NEW packages will be installed:
  eclipse eclipse-jdt eclipse-pde eclipse-platform eclipse-platform-data
0 upgraded, 5 newly installed, 0 to remove and 9 not upgraded.

$ sudo apt purge eclipse
$ sudo apt purge eclipse-platform
$ sudo apt autoremove

java版本全部替换成8
eclipse-jee-neon-3-linux-gtk-x86_64.tar.gz还是可以运行的
https://ftp.jaist.ac.jp/pub/eclipse/technology/epp/downloads/release/neon/3/eclipse-jee-neon-3-linux-gtk-x86_64.tar.gz



https://cdn.mysql.com/archives/mysql-workbench/mysql-workbench-community_8.0.20-1ubuntu18.04_amd64.deb
sudo dpkg -i mysql-workbench-community_8.0.20-1ubuntu18.04_amd64.deb


https://ftp.jaist.ac.jp/pub/eclipse/technology/epp/downloads/release/neon/3/eclipse-jee-neon-3-linux-gtk-x86_64.tar.gz
https://ftp.jaist.ac.jp/pub/eclipse/technology/epp/downloads/release/2021-06/R/eclipse-jee-2021-06-R-linux-gtk-x86_64.tar.gz



jetbrains全家桶
https://download-cdn.jetbrains.com/idea/ideaIU-2021.2.tar.gz
https://download-cdn.jetbrains.com/cpp/CLion-2021.2.tar.gz
https://download-cdn.jetbrains.com/datagrip/datagrip-2021.2.tar.gz
https://download-cdn.jetbrains.com/go/goland-2021.2.tar.gz
https://download-cdn.jetbrains.com/ruby/RubyMine-2021.2.tar.gz
https://download-cdn.jetbrains.com/rider/JetBrains.Rider-2021.2.tar.gz
https://download-cdn.jetbrains.com/webstorm/WebStorm-2021.2.tar.gz
https://download-cdn.jetbrains.com/webide/PhpStorm-2021.2.tar.gz
https://download-cdn.jetbrains.com/python/pycharm-professional-2021.2.tar.gz
https://download-cdn.jetbrains.com/objc/AppCode-2021.2.dmg






sudo apt install libqt5svg5-dev libqt5webkit5-dev uchardet libuchardet-dev qttools5-dev libqt5websockets5 libqt5websockets5-dev libqt5webengine5 qtwebengine5-dev
The following NEW packages will be installed:
  libqt5positioning5-plugins libqt5webchannel5-dev libqt5webengine-data
  libqt5webengine5 libqt5webenginecore5 libqt5webenginewidgets5 libre2-4
  qtpositioning5-dev qtwebengine5-dev


sudo apt remove notepadqq notepadqq-common
sudo dpkg -i notepadqq-git_2.0.0.beta.r12.gd8000f25-1_amd64.deb


sudo apt install libfm-dev libfm-extra-dev libfm-gtk-dev libfmt-dev libfml0 libfml-dev



sudo apt-get install apache2 apache2-utils apache2-doc 
sudo apt-get install ntfs-config

sudo gedit /etc/apache2/sites-available/zhang.conf
<VirtualHost *:80>
	ServerAdmin yxgi5@163.com
	ServerName andreas.com
	ServerAlias www.andreas.com
	#DocumentRoot /media/sdd1/
	#DocumentRoot /media/andy/BC482DD5482D8EE81/
	DocumentRoot /media/andy/
	#DocumentRoot /home/andy/Documents/
	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

sudo gedit /etc/apache2/apache2.conf
添加
<Directory /media/andy/>
	Options Indexes FollowSymLinks
	AllowOverride None
	Order allow,deny
	Allow from all
	Require all granted
</Directory>
...末尾
IndexOptions Charset=UTF-8

$ sudo chmod 755 /media/andreas
$ cd /etc/apache2
$ sudo a2dissite 000-default.conf
$ sudo a2ensite zhang.conf
$ sudo /etc/init.d/apache2 restart


sudo apt install php

用文件服务器和test.php等进行测试  
test.php  
```
<?php phpinfo(); ?>
```  
hello.php  
```
<html>
 <head>
  <title>PHP Test</title>
 </head>
 <body>
 <?php echo '<p>Hello World</p>'; ?> 
 </body>
</html>
```  


sudo apt-get install python3-pyqt5 python3-pyqt4 pyqt4-dev-tools pyqt5-dev-tools pyqt5-dev pyqt5-examples python-sip-do

sudo apt install p7zip convmv

sudo apt install lightdm lightdm-gtk-greeter
$ cat /etc/lightdm/lightdm.conf
[SeatDefaults]
greeter-setup-script=xhost +


/etc/gdm3/Init/Default添加一行 xhost + 到头部


gdm是否添加
/etc/gdm3/custom.conf
DisallowTCP=false
WaylandEnable=false
？

root@my_ip:/etc/gdm3# cat custom.conf

# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
# Uncoment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login
#  AutomaticLoginEnable = true
#  AutomaticLogin = user1

# Enabling timed login
#  TimedLoginEnable = true
#  TimedLogin = user1
#  TimedLoginDelay = 10

[security]
DisallowTCP=false

[xdmcp]
Enable=true
DisplaysPerHost=10 

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true

？


/etc/ssh/ssh_config
ForwardX11 yes
ForwardX11Trusted yes
# systemctl restart sshd


sudo apt install adacontrol
sudo apt purge adacontrol
sudo apt install gnat-8



python保存网页全部内容的调查

sudo -H pip3 install selenium -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install webdriver-manager -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pywebcopy -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pyautogui -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install bencoder -i https://mirrors.163.com/pypi/simple



from webdriver_manager.firefox import GeckoDriverManager

try:
    driver = webdriver.Firefox()
except Exception:
    driver = webdriver.Firefox(GeckoDriverManager().install())


from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys

br = webdriver.Firefox()
br.get('http://www.baidu.com/')

save_me = ActionChains(br).key_down(Keys.CONTROL)\
         .key_down('s').key_up(Keys.CONTROL).key_up('s')
save_me.perform()



https://github.com/operasoftware/operachromiumdriver/releases

解压后+x，放到/usr/bin


sudo apt-get install chromium-chromedriver firefox-geckodriver


To use the default Chrome Profile:

from selenium import webdriver
from selenium.webdriver.chrome.options import Options

options = webdriver.ChromeOptions()
options.add_argument("user-data-dir=C:\\Users\\AtechM_03\\AppData\\Local\\Google\\Chrome\\User Data\\Default")
driver = webdriver.Chrome(executable_path=r'C:\path\to\chromedriver.exe', chrome_options=options)
driver.get("https://www.google.co.in")


Note: Your default chrome profile would contain a lot of bookmarks, extensions, theme, cookies etc. Selenium may fail to load it. So as per the best practices create a new chrome profile for your @Test and store/save/configure within the profile the required data.

To use the customized Chrome Profile:

from selenium import webdriver
from selenium.webdriver.chrome.options import Options

options = Options()
options.add_argument("user-data-dir=C:\\Users\\AtechM_03\\AppData\\Local\\Google\\Chrome\\User Data\\Profile 2")
driver = webdriver.Chrome(executable_path=r'C:\path\to\chromedriver.exe', chrome_options=options)
driver.get("https://www.google.co.in")



options = webdriver.ChromeOptions()
options.add_argument("user-data-dir=/home/andreas/.config/opera")
br=webdriver.Opera(options=options)
br.get("https://www.javbus.com/ja/BNST-035")
save_me = ActionChains(br).key_down(Keys.CONTROL)\
         .key_down('s').key_up(Keys.CONTROL).key_up('s')
save_me.perform()



## 好像没有啥用，存不了啊

ActionChains(driver).key_down(Keys.CONTROL).send_keys('c').key_up(Keys.CONTROL).perform()




///////////////////////////////////////////////////////////////////////////////////
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import time
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys

driver = webdriver.Firefox()
driver.get('http://www.baidu.com/')
#driver.maximize_window()
driver.switch_to.window(driver.current_window_handle)

time.sleep(1) # Pause to allow you to inspect the browser.

#save_me = ActionChains(driver).key_down(Keys.CONTROL)\
#         .key_down('s').key_up(Keys.CONTROL).key_up('s')
#save_me.perform()

#ActionChains(driver).key_down(Keys.CONTROL).send_keys('c').key_up(Keys.CONTROL).perform()
ActionChains(driver).key_down(Keys.CONTROL).key_down('s').key_up(Keys.CONTROL).key_up('s').perform()
#body = driver.find_element_by_tag_name('body')
#body.send_keys(Keys.CONTROL, "s")  # on Mac: body.send_keys(Keys.COMMAND, "s")
#ActionChains(driver).key_down(Keys.LEFT_CONTROL).key_down('s').key_up(Keys.LEFT_CONTROL).key_up('s').perform()

#save = ActionChains(driver).key_down(Keys.CONTROL).send_keys('s').perform()
#save = ActionChains(driver).key_down(Keys.CONTROL).send_keys('s').key_up(Keys.CONTROL).perform()

#ActionChains(driver).send_keys(Keys.CONTROL + "s").perform()
#ActionChains(driver).key_down(Keys.CONTROL).send_keys("s").perform()
#ActionChains(driver).send_keys(Keys.CONTROL + 's').perform()
#ActionChains(driver).send_keys(Keys.CONTROL).send_keys('s').perform()
#ActionChains(driver).send_keys('Test').perform()

#这几个有效啊
#webdriver.ActionChains(driver).key_down(Keys.CONTROL).send_keys("a").perform()
#ActionChains(driver).key_down(Keys.CONTROL).send_keys('a').perform()
#ActionChains(driver).key_down(Keys.CONTROL).key_down('a').key_up(Keys.CONTROL).key_up('a').perform()



#ActionChains(driver).key_down(Keys.CONTROL).perform()
#ActionChains(driver).key_down('s').perform()
#ActionChains(driver).key_up(Keys.CONTROL).perform()
#ActionChains(driver).key_up('s').perform()

#ActionChains(driver).key_down(Keys.ALT).perform()
#ActionChains(driver).key_up(Keys.ALT).perform()


# create action chain object
#action = ActionChains(driver)
 
# perform the operation
#action.key_down(Keys.CONTROL).send_keys('F').key_up(Keys.CONTROL).perform()

time.sleep(5) # Pause to allow you to inspect the browser.
driver.quit()


///////////////////////////////////////////////////////////////////////////////////
谁知道呢，反正ctrl+a可以，ctrl+s不行

///////////////////////////////////////////////////////////////////////////////////
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import time
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options

options = webdriver.ChromeOptions()
options.add_argument("user-data-dir=/home/andreas/.config/opera")
driver = webdriver.Opera(options=options)
driver.get('http://www.baidu.com/')
#driver.maximize_window()
driver.switch_to.window(driver.current_window_handle)

time.sleep(1) # Pause to allow you to inspect the browser.

#save_me = ActionChains(driver).key_down(Keys.CONTROL)\
#         .key_down('s').key_up(Keys.CONTROL).key_up('s')
#save_me.perform()

#ActionChains(driver).key_down(Keys.CONTROL).send_keys('c').key_up(Keys.CONTROL).perform()
#ActionChains(driver).key_down(Keys.CONTROL).key_down('s').key_up(Keys.CONTROL).key_up('s').perform()
#body = driver.find_element_by_tag_name('body')
#body.send_keys(Keys.CONTROL, "s")  # on Mac: body.send_keys(Keys.COMMAND, "s")
#ActionChains(driver).key_down(Keys.LEFT_CONTROL).key_down('s').key_up(Keys.LEFT_CONTROL).key_up('s').perform()

#save = ActionChains(driver).key_down(Keys.CONTROL).send_keys('s').perform()
#save = ActionChains(driver).key_down(Keys.CONTROL).send_keys('s').key_up(Keys.CONTROL).perform()

#ActionChains(driver).send_keys(Keys.CONTROL + "s").perform()
#ActionChains(driver).key_down(Keys.CONTROL).send_keys("s").perform()
#ActionChains(driver).send_keys(Keys.CONTROL + 's').perform()
#ActionChains(driver).send_keys(Keys.CONTROL).send_keys('s').perform()
#ActionChains(driver).send_keys('Test').perform()

#这几个有效啊
#webdriver.ActionChains(driver).key_down(Keys.CONTROL).send_keys("a").perform()
#ActionChains(driver).key_down(Keys.CONTROL).send_keys('a').perform()
#ActionChains(driver).key_down(Keys.CONTROL).key_down('a').key_up(Keys.CONTROL).key_up('a').perform()



#ActionChains(driver).key_down(Keys.CONTROL).perform()
#ActionChains(driver).key_down('s').perform()
#ActionChains(driver).key_up(Keys.CONTROL).perform()
#ActionChains(driver).key_up('s').perform()

#ActionChains(driver).key_down(Keys.ALT).perform()
#ActionChains(driver).key_up(Keys.ALT).perform()


# create action chain object
action = ActionChains(driver)
 
# perform the operation
#action.key_down(Keys.CONTROL).send_keys('F').key_up(Keys.CONTROL).perform()

action.key_down(Keys.CONTROL).key_down('s').key_up(Keys.CONTROL).key_up('s').perform()

time.sleep(5) # Pause to allow you to inspect the browser.
driver.quit()
////////////////////////////////////////////////////////////////////////////////////////


export https_proxy="127.0.0.1:8118"
export http_proxy="127.0.0.1:8118"

////////////////////////////////////////////////////////////////////////////////////////

from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options

#options = webdriver.ChromeOptions()
#options.add_argument("user-data-dir=/home/andreas/.config/opera")
#driver = webdriver.Chrome(options=options)
driver = webdriver.Chrome()
driver.get('http://www.google.com/')
#driver.maximize_window()
driver.switch_to.window(driver.current_window_handle)

time.sleep(1) # Pause to allow you to inspect the browser.
driver.find_element_by_xpath('//body').send_keys(Keys.CONTROL+"f")

time.sleep(5) # Pause to allow you to inspect the browser.
driver.quit()
////////////////////////////////////////////////////////////////////////////////////////

这也不行。回去试试arch的情况了。


tips：
driver.get('http://www.baidu.com/')
view_source_code = driver.execute_script('return document.documentElement.outerHTML')
print(view_source_code)



export https_proxy="127.0.0.1:8118"
export http_proxy="127.0.0.1:8118"
# Proxy test
curl --proxy 127.0.0.1:8118 google.com >/dev/null 2>&1 && echo success || echo fail
success
////////////////////////////////////////////////////////////////////////////////////////

#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import time
import pyautogui
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options

#options = webdriver.ChromeOptions()
#options.add_argument("user-data-dir=/home/andreas/.config/opera")
#driver = webdriver.Chrome(options=options)
driver = webdriver.Chrome()
driver.get('http://www.baidu.com/')
#driver.maximize_window()
driver.switch_to.window(driver.current_window_handle)

time.sleep(2) # Pause to allow you to inspect the browser.

pyautogui.hotkey('ctrl','s')
pyautogui.press('enter')

#save_me = ActionChains(driver).key_down(Keys.CONTROL)\
#         .key_down('s').key_up(Keys.CONTROL).key_up('s')
#save_me.perform()


time.sleep(3) # Pause to allow you to inspect the browser.
driver.quit()
////////////////////////////////////////////////////////////////////////////////////////
用pyautogui才能行。。。。


# title操作
get_title = driver.title
print(get_title)
words=get_title.split()
a=" ".join(words[0:2])
driver.execute_script('document.title = a')
driver.execute_script('document.title = "%s"' % a)

# tab操作
tab1 = driver.window_handles[1]
driver.switch_to.window(tab1)
driver.execute_script('document.title = "My New Title"')


最终的单链接版本
////////////////////////////////////////////////////////////////////////////////////////
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import subprocess
import sys

os.environ ['https_proxy']='127.0.0.1:8118'
os.environ ['http_proxy']='127.0.0.1:8118'


import time
import pyautogui
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options

#options = webdriver.ChromeOptions()
#options.add_argument("user-data-dir=/home/andreas/.config/opera")
#driver = webdriver.Chrome(options=options)
driver = webdriver.Chrome()
driver.get('https://www.javbus.com/ja/BNST-036')
#driver.maximize_window()
driver.switch_to.window(driver.current_window_handle)

#time.sleep(2) # Pause to allow you to inspect the browser.

get_title = driver.title
print(get_title)
words=get_title.split()
a=" ".join(words[0:2])
driver.execute_script('document.title = "%s"' % a)

pyautogui.hotkey('ctrl','s')
pyautogui.press('enter')

#save_me = ActionChains(driver).key_down(Keys.CONTROL)\
#         .key_down('s').key_up(Keys.CONTROL).key_up('s')
#save_me.perform()

time.sleep(3) # Pause to allow you to inspect the browser.
driver.quit()
////////////////////////////////////////////////////////////////////////////////////////



sudo npm cache clean -f
sudo npm install -g n
sudo n stable
sudo npm install -g npm
sudo npm install -g npm@8.1.3

sudo apt install nodejs-mozilla
sudo apt install libqt5xmlpatterns5-dev
sudo apt install libqjson-dev libxml++2.6-dev libxmlsec1-dev libxmltok1-dev qml-module-qtwebengine
sudo apt install redis redis-tools


https://chrome.google.com/webstore/detail/magnetar-磁力聚合搜索/aelfbedmomigndkbpbpplblbgeaaghnf/related?hl=zh-CN







$ sudo apt install libssl1.0-dev
[sudo] password for andreas: 
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages were automatically installed and are no longer required:
  gyp libgcrypt20-dev libgnat-7 libgnatcoll16.1.0 libgnatvsn7 libgnutls-openssl27 libgnutls28-dev libgnutlsxx28 libgpg-error-dev libgpr16.1.2016 libhogweed4:i386 libidn2-dev libjs-async libjs-inherits
  libjs-node-uuid libnettle6:i386 libnspr4-dev libnss3-dev libp11-kit-dev libqrencode3 libtasn1-6-dev libtasn1-doc libunbound2 libusbmuxd4 libuv1-dev libxmlada-dom4.6 libxmlada-input4.6 libxmlada-sax4.6.2016
  libxmlada-schema4.6.2016 libxmlada-unicode4.6.2016 libxmlsec1-gcrypt libxmlsec1-gnutls libxmlsec1-openssl libxslt1-dev linux-hwe-5.4-headers-5.4.0-77 linux-hwe-5.4-headers-5.4.0-81
  linux-hwe-5.4-headers-5.4.0-87 nettle-dev node-abbrev node-ansi node-ansi-color-table node-archy node-async node-balanced-match node-block-stream node-brace-expansion node-builtin-modules
  node-combined-stream node-concat-map node-cookie-jar node-delayed-stream node-forever-agent node-form-data node-fs.realpath node-fstream node-fstream-ignore node-github-url-from-git node-glob
  node-graceful-fs node-hosted-git-info node-inflight node-inherits node-ini node-is-builtin-module node-isexe node-json-stringify-safe node-lockfile node-lru-cache node-mime node-minimatch node-mkdirp
  node-mute-stream node-node-uuid node-nopt node-normalize-package-data node-npmlog node-once node-osenv node-path-is-absolute node-pseudomap node-qs node-read node-read-package-json node-request node-retry
  node-rimraf node-semver node-sha node-slide node-spdx-correct node-spdx-expression-parse node-spdx-license-ids node-tar node-tunnel-agent node-underscore node-validate-npm-package-license node-which
  node-wrappy node-yallist nodejs nodejs-doc shim
Use 'sudo apt autoremove' to remove them.
The following packages will be REMOVED:
  default-libmysqlclient-dev libmysqlclient-dev libssl-dev libxmlsec1-dev
The following NEW packages will be installed:
  libssl1.0-dev
0 upgraded, 1 newly installed, 4 to remove and 10 not upgraded.
Need to get 1,366 kB of archives.
After this operation, 10.1 MB disk space will be freed.
Do you want to continue? [Y/n] 


$ sudo apt install default-libmysqlclient-dev libmysqlclient-dev libssl-dev libxmlsec1-dev



安装docker
see 
https://docs.docker.com/engine/install/linux-postinstall/
https://docs.docker.com/engine/install/ubuntu/
$ sudo apt-get remove docker docker-engine docker.io containerd runc
$ sudo apt-get update
$ sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
Add Docker’s official GPG key:
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
$ echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
$ sudo apt-get update
$ sudo apt-get install docker-ce docker-ce-cli containerd.io
$ sudo groupadd docker
$ docker version
$ sudo docker run hello-world
$ sudo usermod -aG docker $USER
$ newgrp docker
$ docker run hello-world


$ docker pull ubuntu
-- or "docker pull ubuntu:16.04"
$ docker run -d --name ubuntu_container --restart always -v /opt/:/opt/ -v /home/andreas/:/home/andreas/ -i -t ubuntu bash
$ docker exec -it ubuntu_container /bin/bash

# apt update
# apt install lsb-release xvfb x11-utils dbus-x11 rlwrap locales libtinfo5 aptitude git make net-tools libncurses5-dev tftpd zlib1g-dev libssl-dev flex bison libselinux1 gnupg wget diffstat chrpath socat xterm autoconf libtool tar unzip texinfo zlib1g-dev gcc-multilib build-essential libsdl1.2-dev libglib2.0-dev screen pax gzip libboost-dev libboost-tools-dev libboost-timer-dev libcoinutils-dev libboost-all-dev libgtk-3-dev gtk3-nocsd
# dpkg-reconfigure locales
> choose en_US.UTF-8 UTF-8, at about number 149 ... 159
> and choose num 3, en_US.UTF-8
# dpkg-reconfigure dash
> choose no
# adduser andreas
> ...
# su andreas
$ cd /opt/Xilinx/Vitis/2020.1
$ source ./settings64.sh
$ xsct


docker ps -a
docker stop ubuntu_container
docker start ubuntu_container

sudo docker stop $(docker ps -a | awk '{ print $1}' | tail -n +2)
sudo systemctl stop docker.service 

sudo systemctl start docker.service 
sudo docker start $(docker ps -a | awk '{ print $1}' | tail -n +2)






$ sudo grep -r LD_PRELOAD /etc $HOME
sudo apt-get purge gtk3-nocsd



anydesk
安装在/opt/anydesk-5.1.1
作为服务运行

sudo gedit /lib/systemd/systemanydesk.service
<--------------------------------------------
[Unit]
Description=AnyDesk
Requires=network.target
After=systemd-user-sessions.service

[Service]
Type=simple
ExecStart=/opt/anydesk-5.1.1/anydesk --service
PIDFile=/var/run/anydesk.pid
KillMode=mixed
TimeoutStopSec=30
User=root
LimitNOFILE=100000

[Install]
WantedBy=multi-user.target
-------------------------------------------/>
sudo systemctl enable anydesk.service
sudo systemctl start anydesk.service




根目录和/home的共同分区大小不够了，迁移实际存储位置
/home/andreas/Documents/XilinxDocs，复制到/opt/Xilinx
然后用软链接代替原位置
ln -s /opt/Xilinx/XilinxDocs/ ~/Documents/XilinxDocs
用baobab分析占用大户，删除多余或者转移位置



自己编译的notepadqq-git版本崩溃了，安装系统repo的吧，好像有点缺陷
那么安装ppa的版本吧
sudo add-apt-repository ppa:notepadqq-team/notepadqq
sudo apt-get update
sudo apt-get install notepadqq
好像也没有啥不同，如果想卸载就这样
sudo apt-get remove notepadqq notepadqq-common
sudo add-apt-repository --remove ppa:notepadqq-team/notepadqq


通过PKGBUILD和makedeb产生labview2020的安装包，然后安装
添加~/.bashrc
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/natinst/LabVIEW-2020-64/AppLibs:/opt/natinst/niPythonInterface/lib64

sudo dpkg -i ni-software-2020-bionic_20.1.0.49152-0+f0_all.deb
然后update，然后安装ni*,libni*

The following additional packages will be installed:
  libni1045tr1 libniapxipm215 libnicmm1 libnicntdrv1 libnicpcie1 libnidaqmx libnidaqmx-devel libnidaqmx-doc libnidimu1 libnidrumc1 libnidrumc1-bin libnimru2u2 libnimxi1 libnimximgr1 libnimximgr1-data
  libnimximgr1-errors libnip2p1 libnipcibrd1 libnipcibrd1-bin libnipcibrd1-errors libnipxices1 libnipxicid1 libnipxiepmu15 libnipxigp15 libnipxirm1 libnipxisvc2 libniqpxi1 libnirocoapi1 libnismbus2
  libnismbus2-errors libnixlator1 libusb-ni1 nicurli nisslcerts nissli nixercesdelayloadi system-report
The following NEW packages will be installed:
  libni1045tr1 libniapxipm215 libnicmm1 libnicntdrv1 libnicpcie1 libnidaqmx libnidaqmx-devel libnidaqmx-doc libnidimu1 libnidrumc1 libnidrumc1-bin libnimru2u2 libnimxi1 libnimximgr1 libnimximgr1-data
  libnimximgr1-errors libnip2p1 libnipcibrd1 libnipcibrd1-bin libnipcibrd1-errors libnipxices1 libnipxicid1 libnipxiepmu15 libnipxigp15 libnipxirm1 libnipxisvc2 libniqpxi1 libnirocoapi1 libnismbus2
  libnismbus2-errors libnixlator1 libusb-ni1 ni-apal-errors ni-avahi-client ni-bds ni-bds-dkms ni-controllerdriver ni-controllerdriver-errors ni-controllerdriver-libs ni-daqmx ni-daqmx-dsa ni-daqmx-dsa-libs
  ni-daqmx-ef ni-daqmx-errors ni-daqmx-fsl-libs ni-daqmx-libs ni-daqmx-mio ni-daqmx-mio-libs ni-daqmx-nicartenum-dkms ni-daqmx-nicdcc-dkms ni-daqmx-nicdr-dkms ni-daqmx-nichenum-dkms ni-daqmx-nicmr-dkms
  ni-daqmx-nicondr-dkms ni-daqmx-nicsr-dkms ni-daqmx-nidmxf-dkms ni-daqmx-nidsar-dkms ni-daqmx-niesr-dkms ni-daqmx-nifdr-dkms ni-daqmx-nifresnelmbdc-dkms ni-daqmx-nifsl-dkms ni-daqmx-nihorbr-dkms
  ni-daqmx-nilms-dkms ni-daqmx-nimsdr-dkms ni-daqmx-niraptr-dkms ni-daqmx-nisdig-dkms ni-daqmx-nissr-dkms ni-daqmx-nistc2-dkms ni-daqmx-nistc3r-dkms ni-daqmx-nistcr-dkms ni-daqmx-nitior-dkms
  ni-daqmx-niwfr-dkms ni-daqmx-nixsr-dkms ni-daqmx-notices ni-dim ni-dim-dkms ni-dim-libs ni-dim-sysapi ni-euladepot ni-fpga-interface ni-kal ni-mdbg ni-mdbg-dkms ni-mdbg-errors ni-mru ni-mru-dkms ni-mxdf
  ni-mxdf-dkms ni-mxdf-errors ni-mximanager ni-mximanager-libs ni-mximanager-nicpciek-dkms ni-mxs ni-networkdiscoverysvc ni-orb ni-orb-dkms ni-orb-errors ni-orb-tools ni-p2p ni-p2p-devel ni-p2p-dkms
  ni-p2p-errors ni-pal ni-pal-dkms ni-pal-errors ni-pal-support ni-pxi-tools ni-pxihw-ni1045-dkms ni-pxihw-nicntdrv-dkms ni-pxihw-nimxi-dkms ni-pxihw-nipxicid-dkms ni-pxihw-nipxicmm-dkms
  ni-pxihw-nipxiethernet-dkms ni-pxihw-nipxim2-dkms ni-pxihw-nismbus-dkms ni-pxipf-errors ni-pxipf-nipxifp-dkms ni-pxipf-nipxigp-dkms ni-pxipf-nipxirm-bin ni-pxipf-nipxirm-dkms ni-pxiplatformframework
  ni-pxiplatformframework-data ni-pxiplatformhwsupport ni-pxiplatformhwsupport-bin ni-pxiplatformhwsupport-data ni-pxiplatformhwsupport-errors ni-pxiplatformhwsupport-libs ni-pxiplatformservices
  ni-pxiplatformservices-bin ni-pxiplatformservices-data ni-pxiplatformservices-libs ni-pxiplatformsoftware-errors ni-pxisa-compliance ni-qpxi ni-qpxi-libs ni-rio ni-rio-dkms ni-rio-fpga-ids ni-rio-server
  ni-roco ni-routing-errors ni-rtsi-libs ni-rtsi-pal-libs ni-service-locator ni-software-action-services ni-syncdomain-service ni-sysapi ni-syscfg-devel ni-syscfg-runtime ni-targetcfg ni-usrp-rio
  ni-usrp-rio-dkms ni-usrp-rio-libs ni-wsrepl ni-xlator nicurli nisslcerts nissli nixercesdelayloadi system-report
0 upgraded, 160 newly installed, 0 to remove and 19 not upgraded.

其实这时候还是没有visa和4882(GPIB)的驱动.

上面apt方式安装的所有包，另外做了一个PKGBUILD，全部makedeb打包成一个大的labview-debs-2020_0f1-1_amd64.deb，另外makepkg生成一个大的arch安装包


那么从http://download.ni.com/ni-linux-desktop/2020.07/rpm/ni/lp151/   这个是opensuse的
抓下来所有的rpm包，写个PKGBUILD来转换一下

PKGBUILD
<--------------------------------------------------
# Maintainer: Andreas Zhang
# Contributor: Andreas Zhang <denglitsch@gmail.com>

_release='2020'
_short_release="${_release:2:4}"
_service_pack='0'
pkgname="labview-visa-${_release}"
pkgver="${_service_pack}f1"
pkgrel=1
pkgdesc='A system-design platform and development environment for a visual programming language from National Instruments.'
url="https://www.ni.com/labview/release-archive/${_release}/"
arch=('x86_64')
license=("custom:LabVIEW-${_release}")
depends=('xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'shared-mime-info')
makedepends=('sed' 'libarchive')
options=('!strip') # Avoid time consuming operations.
source=("file://libivivisa0-7.0.0-1.x86_64.rpm"
        "file://libivivisa0-devel-7.0.0-1.x86_64.rpm"
        "file://libivivisa-confmgr0-7.0.0-1.x86_64.rpm"
        "file://libivivisa-utilities0-7.0.0-1.x86_64.rpm"
        "file://ni-visa-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-config-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-ddw-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-devel-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-doc-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-errors-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-headers-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-interactive-control-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-labview-2020-support-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-labview-filter-dialog-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-labview-io-control-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-labview-rc-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-lxi-discovery-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-enet-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-enet-serial-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-gpib-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-pxi-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-pxi-dkms-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-remote-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-serial-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-passport-usb-20.0.0.49152-0+f0.x86_64.rpm"
        "file://ni-visa-runtime-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-server-20.0.0.49152-0+f0.x86_64.rpm"
        "file://libvisa-20.0.0.49152-0+f0.x86_64.rpm"
        "file://libvisa-data-20.0.0.49152-0+f0.noarch.rpm"
        "file://ni-visa-sysapi-20.0.0.49152-0+f0.x86_64.rpm")
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

prepare() {
    cd ${srcdir}
    for file in ${source[@]}; do if [ ${file: -4} == ".rpm" ]; then bsdtar -xf "${file#file://}"; fi; done
}
            
            
package() {
  mkdir -p "${pkgdir}/opt"
  cp -rp "${srcdir}/usr/local/natinst" "${pkgdir}/opt/"
  mkdir -p "${pkgdir}/usr/bin/"
  cp -rp "${srcdir}/usr/bin" "${pkgdir}/usr/"
  mkdir -p "${pkgdir}/usr/include/"
  cp -rp "${srcdir}/usr/include" "${pkgdir}/usr/"
  mkdir -p "${pkgdir}/usr/lib/"
  cp -rp "${srcdir}/usr/lib" "${pkgdir}/usr/"
  mkdir -p "${pkgdir}/usr/lib64/"
  cp -rp "${srcdir}/usr/lib64" "${pkgdir}/usr/"
  mkdir -p "${pkgdir}/usr/share/"
  cp -rp "${srcdir}/usr/share" "${pkgdir}/usr/"
  mkdir -p "${pkgdir}/usr/src/"
  cp -rp "${srcdir}/usr/src" "${pkgdir}/usr/"
  mkdir -p "${pkgdir}/etc"
  cp -rp "${srcdir}/etc" "${pkgdir}/"
  mkdir -p "${pkgdir}/var"
  cp -rp "${srcdir}/var" "${pkgdir}/"
}

# vim:set et sw=2 sts=2:
---------------------------------------/>

sudo dpkg -i labview-visa-2020_0f1-1_amd64.deb
sudo dkms install -m NiViPciK -v 20.0.0f0
sudo /usr/lib/dkms/common.postinst NiViPciK 20.0.0f0
sudo dkms install -m NiRioSrv -v 20.0.1f0
sudo /usr/lib/dkms/common.postinst NiRioSrv 20.0.1f0
sudo /sbin/ldconfig
sudo -H pip3 install pyvisa -i https://mirrors.163.com/pypi/simple
sudo -H pip3 install pyvisa-py -i https://mirrors.163.com/pypi/simple
sudo reboot
driverwizard是否正常
缺失liblvrt.so.20.0
sudo alien labview-2020-rte-20.0.0-1.x86_64.rpm
sudo dpkg -i labview-2020-rte_20.0.0-2_amd64.deb
sudo apt remove labview-2020-rte

cd /opt/natinst
$ find . -name "liblvrt.so*"
./LabVIEW-2020-64/AppLibs/liblvrt.so.20.0.0
./LabVIEW-2020-64/AppLibs/liblvrt.so

再strace driverwizard
cd /opt/natinst/LabVIEW-2020-64/AppLibs
sudo ln -s liblvrt.so.20.0.0 liblvrt.so.20.0
sudo ln -s ../resource/libniCPULib.so.20.0.0 libniCPULib.so
sudo mkdir English
sudo cp lvapp.rsc English/
sudo cp ../resource/tdtable.tdr .

driverwizard等几个起码能打开了
libvisa-20.0.0.49152-0+f0.x86_64.rpm
libvisa-data-20.0.0.49152-0+f0.noarch.rpm
添加到PKGBUILD很重要，已经更新


$ su
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/natinst/LabVIEW-2020-64/AppLibs:/opt/natinst/niPythonInterface/lib64:/opt/natinst/share/NI-VISA:/opt/natinst/LabVIEW-2020-64/resource
# visaconf
初始化一下有关的driver配置





























