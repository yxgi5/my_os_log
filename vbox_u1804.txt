/sbin/rcvboxadd quicksetup <version>
/sbin/rcvboxadd quicksetup all

更换源为 mirrors.163.com
sudo update

安装vbox增强后
sudo vi /etc/fstab
share /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0


https://developer.nvidia.com/nvsdk-manager

sudo dpkg -i sdkmanager_1.4.1-7402_amd64.deb
sudo apt install -f
sudo apt install vim-gtk vim ctags vim-doc vim-scripts exuberant-ctags libtemplate-perl ispell vim-addon-manager cscope

sudo apt install shadowsocks shadowsocks-libev privoxy proxychains
可以命令运行
nohup sslocal -c /etc/shadowsocks.json /dev/null 2>&1 &
也可以设置服务

sudo gedit /lib/systemd/system/shadowsocks@.service
-------------------------------
[Unit]
Description=Shadowsocks Client Service
After=network.target

[Service]
Type=simple
User=nobody
ExecStart=/usr/bin/sslocal -c /etc/shadowsocks/%i.json

[Install]
WantedBy=multi-user.target
-------------------------------

sudo gedit /etc/shadowsocks/config.json
-------------------------------
{
    "server":"119.28.9.79",
    "server_port":3588,
    "local_address": "127.0.0.1",
    "local_port":1081,
    "password":"xinhai",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false,
    "workers": 10
}
-------------------------------
sudo systemctl enable shadowsocks@config.service
Created symlink /etc/systemd/system/multi-user.target.wants/shadowsocks@config.service → /lib/systemd/system/shadowsocks@.service.

sudo systemctl start shadowsocks@config.service
systemctl status shadowsocks@config.service


sudo gedit /etc/privoxy/config
------
listen-address  localhost:8118
forward-socks5 / 127.0.0.1:1081 .
------
privoxy /etc/privoxy/config启动
systemctl status privoxy.service
sudo systemctl start privoxy.service
sudo systemctl enable privoxy.service
Created symlink /etc/systemd/system/multi-user.target.wants/privoxy.service → /usr/lib/systemd/system/privoxy.service.


类似于这样
aria2c --all-proxy='http://127.0.0.1:8118' -D


export https_proxy="127.0.0.1:8118"
export http_proxy="127.0.0.1:8118"
(可以添加到类似/etc/profile的地方去)

测试
curl www.google.com


yay
就可以加速了


sudo gedit /etc/proxychains.conf
----------------------------------
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to "tor"
#socks4 	127.0.0.1 9050
# set to "v2ray"
#socks5 	127.0.0.1 10808
# set to "SS"
socks5 	127.0.0.1 1081
--------------------------------



测试
export PROXY_DNS_SERVER=8.8.8.8
PROXYCHAINS_SOCKS5=1081 proxychains4 -f /etc/proxychains.conf curl www.google.com
proxychains curl www.google.com










sudo tail -f ~/.nvsdkm/sdkm.log
sdkmanager

https://developer.download.nvidia.com/sdkmanager/sdkm-config/SDKMANAGER/Linux/sdkml2_sdkmanager_linux_deb.json

https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/sdkml3_jetpack_l4t_451.json
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17_DEEPSTREAM/sdkml3_jetpack_l4t_451_deepstream.json
实际上类似于这样
https://developer.download.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17_DEEPSTREAM/sdkml3_jetpack_l4t_451_deepstream.json?WXKwCOquaAWNu0X3zcATvilrY8x1PcRrVnEG9pKFSH4Vc4GegPrhsJb9NW5jLO6ylPTWFG4XGwCKG7GwqvdWzwzy6dKGkfZECHjUg-F8LzftM6d-GbL_y06u3O7YXGErzlb8S1fzx31JU8oefmvxMgvyEWvkbs6exA2oog-oWXxwFR30l6h53XE7g-Dul5QDb7i-V2RJy0BFG6G6oxNl0devcqnhb0qnS_o3a0aszUa3enxdriPIUmac9AQN9Q

几个比较大的文件很难下
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/ubuntu1804/cuda-repo-ubuntu1804-10-2-local-10.2.89-440.40_1.0-1_amd64.deb
https://developer.download.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/T210/Tegra_Linux_Sample-Root-Filesystem_R32.5.1_aarch64.tbz2
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/cuda-repo-l4t-10-2-local-10.2.89_1.0-1_arm64.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NsightSystems-linux-public-2020.5.3.17-0256620.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NoDLA/libnvinfer-samples_7.1.3-1+cuda10.2_all.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NoDLA/libnvinfer-doc_7.1.3-1+cuda10.2_all.deb
https://developer.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/NoDLA/libnvinfer-bin_7.1.3-1+cuda10.2_arm64.deb

https://developer.download.nvidia.com//assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/DLA/libnvinfer-samples_7.1.3-1+cuda10.2_all.deb
https://developer.download.nvidia.com//assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17/T186/Jetson_Linux_R32.5.1_aarch64.tbz2
https://developer.download.nvidia.com/assets/embedded/secure/tools/files/jetpack-sdks/jetpack-4.5.1/JETPACK_451_b17_DEEPSTREAM/deepstream-5.1_5.1.0-1_arm64.deb
有时候替换成developer.download.nvidia.cn可以下的动
http://172.17.0.1/Jetson_Linux_R32.5.1_aarch64.tbz2?fid=xPaCAOd6Io9uzil11Ik8wMSQiC196eQUAAAAAF0vEo99-hU7BE7JoYsl-BNsMd2-&mid=666&threshold=150&tid=5E392A99E5A7292FF65E3AB98212333E&srcid=119&verno=1


导出cookie再用工具下载
#   1) wget -x --load-cookies cookies.txt "chrome://startpage/downloads"
#   2) curl --cookie cookies.txt "chrome://startpage/downloads"
#   3) aria2c --load-cookies cookies.txt "chrome://startpage/downloads"




sudo apt install aptitude curl aria2 wget
sudo apt install xinit openbox menu libxml2-dev tint2 openbox-menu openbox-gnome-session pkg-config menu-l10n lxdm obmenu feh dmenu fonts-dejavu
sudo apt install lxappearance pcmanfm libfm-tools lxterminal leafpad



sudo passwd root
sudo gedit /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf
```
[Seat:*]
greeter-session=unity-greeter
user-session=ubuntu
greeter-show-manual-login=true
all-guest=false
```


/root/.profile
```
mesg n
```
改成
```
tty -s && mesg n
```

恢复默认网卡为eth0
sudo vim /etc/default/grub
查找
GRUB_CMDLINE_LINUX=""
修改为
GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"
重新生成grub引导配置文件
sudo grub-mkconfig -o /boot/grub/grub.cfg



sudo apt install libgtk2.0-dev libpango-perl libpango1.0-dev
sudo apt install build-essential cpanminus git

sudo cpan install YAML Gtk2 Pango Linux::DesktopFiles Data::Dump

git clone git://github.com/trizen/obmenu-generator
sudo cp obmenu-generator/obmenu-generator /usr/bin
mkdir ~/.config/obmenu-generator/
sudo cp -r obmenu-generator/schema.pl ~/.config/obmenu-generator/
sudo cpanm Linux::DesktopFiles
sudo cpanm Data::Dump
sudo chmod 777 /usr/bin/obmenu-generator 

obmenu-generator -i


～/config/dmenu目录


sudo apt install conky conky-all tk-dev
sudo apt install volumeicon-alsa
sudo apt install gnome-icon-theme
sudo apt install parcellite 
sudo apt install shutter
sudo apt install net-tools
sudo apt install rar 
sudo apt install p7zip p7zip-full p7zip-rar unace unrar zip unzip p7zip-full p7zip-rar sharutils uudeview mpack jlha-utils arj cabextract file-roller xz-utils
sudo apt install fonts-ipafont-gothic fonts-ipafont-mincho fonts-wqy-microhei fonts-wqy-zenhei fonts-indic
sudo apt install git libgtk2.0-dev libglib2.0-dev libgconf2-dev libgstreamer1.0-dev g++ make cmake libgst-dev autoconf libtool automake
sudo apt install cmake cmake-gui
sudo apt install python-pip
sudo apt install gtk-theme-switch gtk2-engines
sudo apt install openbox-dev
sudo apt install lxappearance-obconf adwaita-icon-theme-full
sudo apt install opera
sudo apt install chromium-browser  chromium-browser-l10n firefox

obconf
导入carbon.obt
lxappearance

sudo apt install network-manager-dev network-manager-openvpn network-manager-pptp network-manager-vpnc network-manager-openconnect network-manager-iodine pppoe ppp pppoeconf pppconfig
sudo apt install fcitx-table-wubi libreoffice-l10n-en-za hyphen-en-gb hunspell-en-ca libreoffice-l10n-en-gb thunderbird-locale-en-gb mythes-en-au libreoffice-help-en-gb fcitx-sunpinyin hunspell-en-za gimp-help-en kde-l10n-engb hunspell-en-au hunspell-en-gb kde-l10n-zhcn
sudo apt install fcitx-googlepinyin fcitx fcitx-bin fcitx-data fcitx-modules fcitx-googlepinyin fcitx-config-gtk fcitx-frontend-gtk2 fcitx-ui-classic fcitx-module-dbus
sudo im-config

sudo apt install xscreensaver libopengl-xscreensaver-perl xscreensaver-data xscreensaver-data-extra xscreensaver-gl xscreensaver-gl-extra xscreensaver-screensaver-bsod xscreensaver-screensaver-dizzy xscreensaver-screensaver-webcollage fonts-freefont-ttf

$ git clone https://github.com/valr/cbatticon
$ cd cbatticon
$ make WITH_GTK3=0 WITH_NOTIFY=0
$ sudo make install
$ cbatticon &

https://www.pixelstalk.net/ubuntu-logo-wallpapers/
背景放到/usr/share/wallpapers/



下载包在
~/Downloads/nvidia/sdkm_downloads
安装在
~/nvidia/nvidia_sdk


sudo apt install mlocate
sudo updatedb



sudo apt install iptux


~/.bashrc添加一句
PS1="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$ "


~/.xprofile中加入：(不要在/etc/environment)
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export QT4_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx




nvidia默认的usb网口
目标板：192.168.55.1
PC：192.168.55.100



sudo apt install ubuntu-desktop
sudo apt install ubuntu-restricted-extras
sudo apt install ubuntu-unity-desktop
需要重启
sudo shutdown -r now



sudo cp /usr/share/applications/fcitx.desktop ~/.config/autostart/fcitx.desktop
或者
sudo cp /usr/share/fcitx/xdg/autostart/fcitx-autostart.desktop /etc/xdg/autostart/





cat /etc/apt/sources.list

# deb cdrom:[Ubuntu 18.04.5 LTS _Bionic Beaver_ - Release amd64 (20200806.1)]/ bionic main restricted

# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://mirrors.163.com/ubuntu/ bionic main restricted
# deb-src http://mirrors.163.com/ubuntu/ bionic main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted
# deb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://mirrors.163.com/ubuntu/ bionic universe
# deb-src http://mirrors.163.com/ubuntu/ bionic universe
deb http://mirrors.163.com/ubuntu/ bionic-updates universe
# deb-src http://mirrors.163.com/ubuntu/ bionic-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu 
## team, and may not be under a free licence. Please satisfy yourself as to 
## your rights to use the software. Also, please note that software in 
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://mirrors.163.com/ubuntu/ bionic multiverse
# deb-src http://mirrors.163.com/ubuntu/ bionic multiverse
deb http://mirrors.163.com/ubuntu/ bionic-updates multiverse
# deb-src http://mirrors.163.com/ubuntu/ bionic-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
deb http://archive.canonical.com/ubuntu bionic partner
# deb-src http://archive.canonical.com/ubuntu bionic partner

deb http://security.ubuntu.com/ubuntu bionic-security main restricted
# deb-src http://security.ubuntu.com/ubuntu bionic-security main restricted
deb http://security.ubuntu.com/ubuntu bionic-security universe
# deb-src http://security.ubuntu.com/ubuntu bionic-security universe
deb http://security.ubuntu.com/ubuntu bionic-security multiverse
# deb-src http://security.ubuntu.com/ubuntu bionic-security multiverse
deb http://archive.ubuntu.com/ubuntu bionic main universe restricted multiverse



sudo dpkg-reconfigure lightdm
sudo dpkg-reconfigure gdm3
unity --version
sudo apt install unity-tweak-tool
sudo apt install screenfetch

sudo apt install gitk
The remote end hung up unexpectedly 解决方案
git config --global http.postBuffer 1048576000
git config --global http.lowSpeedLimit 0
git config --global http.lowSpeedTime 999999  单位 秒




~/.bashrc
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
修改为
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ '




Recommended packages:
  libgoo-canvas-perl libgtk2-appindicator-perl acpi-support gir1.2-gmenu
  memtest86+ unity-webapps-common usb-creator-gtk
The following packages will be REMOVED:
  libavcodec57




unity-control-center
gnome-control-center
都空白哦
这样就可以显示了

env XDG_CURRENT_DESKTOP=GNOME gnome-control-center

可以修改/usr/share/applications/unity-control-center.desktop
unity-control-center应该也类似，XDG_CURRENT_DESKTOP=Unity








sudo apt install qtqr tor

//sudo apt install wine-stable winetricks playonlinux

ERROR: ld.so: object 'libgtk3-nocsd.so.0' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.
sudo apt install gtk3-nocsd
sudo apt-get install libgtk3-nocsd0:i386
sudo apt-get install libgtk3-nocsd0
//gedit ~/.bashrc
//export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgtk3-nocsd.so.0

sudo apt-get purge gtk3-nocsd
关于wine修改这个地方吧
cat /etc/X11/Xsession.d/51gtk3-nocsd-detect





https://download.virtualbox.org/virtualbox/6.1.18
virtualbox-6.1_6.1.18-142142_Ubuntu_bionic_amd64.deb
libqt5opengl5 libqt5x11extras5



//这样版本低 sudo apt install virtualbox virtualbox-guest-additions-iso virtualbox-qt virtualbox-guest-dkms

systemctl status virtualbox.service
sudo usermod -a -G vboxusers <andreas>
cat /etc/group | grep vbox

/var/lib/update-notifier/package-data-downloads/partial/


wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian bionic contrib"




su
proxychains apt install virtualbox-6.1
sudo modinfo vboxdrv
sudo apt purge virtualbox-dkms
sudo apt purge virtualbox-guest-dkms
sudo apt install dkms
sudo /sbin/vboxconfig



sudo virtualbox
安装extension包
或者用命令行添加
VBoxManage extpack install [--replace] <tarball> |
                   uninstall [--force] <name> |
                   cleanup




ERROR: ld.so: object 'libproxychains.so.3' from LD_PRELOAD cannot be preloaded: ignored.
sudo gedit /usr/bin/proxychains
export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libproxychains.so.3

proxychains-ng？？


sudo apt install openocd
Ac6


foxitreader
sudo apt install retext

wps

sudo apt install science-electronics


cliplt 与 parcellite



sudo ubuntu-drivers devices
sudo apt install nvidia-driver-390
sudo apt install nvidia-utils-390

sudo apt-get install mesa-common-dev


nvidia-settings

sudo apt install xserver-xorg-video-nouveau

sudo apt install linux-headers-$(uname -r)



wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda-repo-ubuntu1804-11-2-local_11.2.2-460.32.03-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu1804-11-2-local_11.2.2-460.32.03-1_amd64.deb
sudo apt-key add /var/cuda-repo-ubuntu1804-11-2-local/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda

sudo apt install ubuntu-desktop ubuntu-unity-desktop xserver-xorg-input-all

sudo add-apt-repository ppa:notepadqq-team/notepadqq
sudo apt-get update
sudo apt-get install notepadqq




gedit /var/log/apt/term.log

//sudo aptitude install xserver-xorg-input-all-hwe-18.04 xserver-xorg-input-libinput-hwe-18.04 xserver-xorg-video-ati-hwe-18.04 xserver-xorg-video-fbdev-hwe-18.04 xserver-xorg-video-intel-hwe-18.04 xserver-xorg-video-nouveau-hwe-18.04 xserver-xorg-video-qxl-hwe-18.04 xserver-xorg-video-radeon-hwe-18.04 xserver-xorg-video-vesa-hwe-18.04 xserver-xorg-core-hwe-18.04 ubuntu-desktop ubuntu-unity-desktop xorg xserver-xorg-hwe-18.04 xserver-xorg-video-all-hwe-18.04 xserver-xorg-video-vmware-hwe-18.04 xserver-xorg-video-amdgpu-hwe-18.04 xserver-xorg-input-wacom-hwe-18.04 

sudo aptitude install xserver-xorg-input-all xserver-xorg-input-libinput xserver-xorg-video-ati xserver-xorg-video-fbdev xserver-xorg-video-intel xserver-xorg-video-nouveau xserver-xorg-video-qxl xserver-xorg-video-radeon xserver-xorg-video-vesa xserver-xorg-core ubuntu-desktop ubuntu-unity-desktop xorg xserver-xorg xserver-xorg-video-all xserver-xorg-video-vmware xserver-xorg-video-amdgpu xserver-xorg-input-wacom libqtwebkit4




drawio
matlab 2017




./petalinux-v2020.1-final-installer.run -d /opt/petalinux
$ sudo apt-get install u-boot-tools lrzsz minicom nfs-kernel-server tftpd xinetd libncurses5-dev
$ sudo apt-get install slang-xfig
$ sudo apt-get install quilt
$ sudo apt-get install e2fsck-static
sudo apt-get install build-essential vim tofrodos iproute2 gawk gcc git make net-tools zlib1g-dev libssl-dev flex bison libselinux1 libncurses5-dev tftpd lib32z1 lib32ncurses5 libbz2-1.0:i386 lib32stdc++6 xvfb chrpath socat autoconf libtool
sudo apt-get install screen pax gzip tar
sudo apt-get install tftp


sudo apt-get install tftpd

/etc/xinetd.d/tftp

service tftp
{
protocol = udp
port = 69
socket_type = dgram
wait = yes
user = nobody
server = /usr/sbin/in.tftpd
server_args = /tftpboot
disable = no
}


sudo mkdir -p /tftpboot
sudo chmod 777 /tftpboot
sudo chown nobody /tftpboot
sudo /etc/init.d/xinetd stop
sleep 1
sudo /etc/init.d/xinetd start

确认tftp服务是否已经开启
netstat -au | grep tftp

本机测试,需要tftp客户端
tftp <ip>
get <testfile>

目标板上
tftp -g -r <testfile> <ip>



sudo apt-get install nfs-kernel-server nfs-common portmap
sudo apt install rpcbind
sudo gedit /etc/default/portmap
内容是
-i 127.0.0.1

sudo gedit /etc/hosts.allow
内容是
portmap lockd rquotad mountd statd:ALL

$ sudo exportfs -ra
$ sudo service portmap restart
或者sudo /etc/init.d/rpcbind restart

sudo gedit /etc/exports
内容是
/home/andreas/targetfs *(rw,nohide,insecure,no_subtree_check,async,no_root_squash)

$ sudo /etc/init.d/nfs-kernel-server restart

sudo showmount -e localhost

showmount
rpcinfo
exportfs
nfsstat


服务器端nfs-kernel-server自动安装nfs-common、rpcbind等13个软件包

mount到本机nfs目录的客户端机器。
sudo showmount -e localhost

将配置文件中的目录全部重新export一次！无需重启服务。
sudo exportfs -rv


查看NFS的运行状态
sudo nfsstat

查看rpc执行信息，可以用于检测rpc运行情况
sudo rpcinfo

查看网络端口，NFS默认是使用111端口。
sudo netstat -tu -4

客户端nfs-common自动安装nfs-common、rpcbind等12个软件包

显示指定的（192.168.3.167）NFS服务器上export出来的目录
sudo showmount -e 192.168.3.167

创建本地挂载目录
sudo mkdir -p /mnt/data
将NFS服务器192.168.3.167上的目录，挂载到本地的/mnt/目录下
sudo mount -t nfs 192.168.3.167:/data /mnt/data



为了安装Xilinx vitis
sudo gedit /etc/lsb-release
其中Description:	Ubuntu 18.04.5 LTS
先暂时修改成Description:	Ubuntu 18.04.4 LTS


sudo apt install blt 
sudo apt install lib32asan4 lib32atomic1 lib32cilkrts5 lib32gcc-7-dev lib32gcc1 lib32gomp1 lib32itm1 lib32mpx2 lib32quadmath0 lib32stdc++6 lib32ubsan0 libasound2-dev libbison-dev libc6-dev-i386 libc6-dev-x32 libc6-i386 libc6-x32 libcaca-dev libfl-dev libfl2 libpulse-dev libslang2-dev libtext-unidecode-perl libtinfo-dev libx32asan4 libx32atomic1 libx32cilkrts5 libx32gcc-7-dev libx32gcc1 libx32gomp1 libx32itm1  libx32quadmath0 libx32stdc++6 libx32ubsan0 python3-astroid python3-gitdb python3-isort python3-lazy-object-proxy python3-logilab-common python3-mccabe python3-smmap python3-tk python3-wrapt tk8.6-blt2.5
sudo apt install gcc-7-multilib texinfo libncurses5-dev libapr1 libapr1-dev libaprutil1 libsctp-dev uuid-dev

sudo apt install gcc-multilib
冲突删除了一些包，安装完petalinux再换回来
sudo apt install cuda-cross-aarch64-10-2 g++-7-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-7-aarch64-linux-gnu gcc-aarch64-linux-gnu vpi1-cross-aarch64-l4t
vpi1-cross-aarch64-l4t是nvidia的sdk包里的

vitis后续
sudo /opt/Xilinx/.xinstall/Vitis_2020.1/scripts/installAIeDepLibs.sh
sudo /opt/Xilinx/Vivado/2020.1/data/xicom/cable_drivers/lin64/install_script/install_drivers/install_drivers

这些包还是留着，不要auto remove了
sudo apt install binutils-aarch64-linux-gnu cpp-7-aarch64-linux-gnu cpp-aarch64-linux-gnu cuda-cudart-cross-aarch64-10-2 cuda-cufft-cross-aarch64-10-2 cuda-cupti-cross-aarch64-10-2 cuda-curand-cross-aarch64-10-2 cuda-cusolver-cross-aarch64-10-2 cuda-cusparse-cross-aarch64-10-2 cuda-driver-cross-aarch64-10-2 cuda-misc-headers-cross-aarch64-10-2 cuda-npp-cross-aarch64-10-2 cuda-nsight-compute-addon-l4t-10-2 cuda-nvgraph-cross-aarch64-10-2 cuda-nvml-cross-aarch64-10-2 cuda-nvrtc-cross-aarch64-10-2 gcc-7-aarch64-linux-gnu-base gcc-7-cross-base gcc-8-cross-base libasan4-arm64-cross libatomic1-arm64-cross libc6-arm64-cross libc6-dev-arm64-cross libcublas-cross-aarch64 libgcc-7-dev-arm64-cross libgcc1-arm64-cross libgomp1-arm64-cross libitm1-arm64-cross liblsan0-arm64-cross libstdc++-7-dev-arm64-cross libstdc++6-arm64-cross libtsan0-arm64-cross libubsan0-arm64-cross linux-libc-dev-arm64-cross nsight-compute-addon-l4t-2019.5.0




sudo apt install qtcreator
sudo apt install qtbase5-dev qtbase5-dev-tools qtbase5-doc qtbase5-doc-html qtbase5-examples qtbase5-private-dev qt5-qmake qt5-default qt5-doc qt5-doc-html qt5-assistant qt5ct qtcreator-data qtcreator-doc qtchooser libevdev-doc qt5-style-plugins default-libmysqlclient-dev firebird-dev libpq-dev libsqlite3-dev unixodbc-dev


sudo apt install sqlite sqlitebrowser sqlite-doc libqscintilla2-doc sqlite3-doc


sudo apt install hwinfo



sudo apt install ubuntu-restricted-extras ttf-mscorefonts-installer --reinstall


~/.Xresources
-----------------------------------
Xft.antialias: true
Xft.hinting: true
Xft.hintstyle: hintslight
Xft.lcdfilter: lcddefault
Xft.rgba: rgb
Xft.dpi:   107
-----------------------------------


sudo apt install rlwrap




## for allegro
sudo apt install lsb
sudo apt install ksh lsb-core
sudo apt install vlc-bin
sudo apt install libxmu-dev:i386

cd /usr/local/bin
sudo gedit allegro
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/pcb/bin/allegro
-------------------------------------------------
sudo gedit concepthdl
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/bin/concepthdl
-------------------------------------------------
sudo gedit pad_designer
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/pcb/bin/pad_designer
-------------------------------------------------
sudo chmod +x allegro pad_designer concepthdl

sudo gedit projmgr
-------------------------------------------------
#!/bin/bash
cd /opt/cadence/allegro_166_patch/
source spb166
/opt/cadence/SPB166/tools/bin/projmgr
-------------------------------------------------
sudo chmod +x projmgr

eagle 8.1.0
cd /usr/local/bin
sudo gedit eagle
-------------------------------------------------
#!/bin/bash
cd /opt/eagle-8.1.0/
./eagle
-------------------------------------------------
sudo chmod +x eagle
ls eagle -l




sudo aptitude install libssl1.0-dev
sudo aptitude install npm
sudo npm install -g cnpm --registry=https://registry.npm.taobao.org
sudo npm config set registry https://registry.npm.taobao.org

sudo npm install n -g
sudo npm install -g cnpm
sudo n stable
sudo node -v      ###shuould>10
sudo cnpm install -g electron
electron -v


test
git clone https://github.com/electron/electron-quick-start
cd electron-quick-start
cnpm install
cnpm start

sudo cnpm install -g electron@9
electron --version

/media/andreas/4be7143e-a6ab-4c1d-8456-e571b77a1014/usr/lib/electronic-wechat
$ exec electron . "$@"
运行ok
可以复制到
/usr/lib/electronic-wechat


sudo apt install libevince-dev


sudo apt install browser-plugin-evince

sudo apt install ark fam voikko-fi phonon4qt5-backend-gstreamer hspell libdvdcss2
sudo dpkg-reconfigure libdvd-pkg

sudo apt install vlc vlc-plugin-notify vlc-plugin-qt vlc-plugin-samba vlc-plugin-skins2 vlc-plugin-video-splitter vlc-plugin-visualization

sudo apt install caja engrampa meld mate-desktop-environment lzip lzop ncompress rzip unalz fonts-mathjax-extras fonts-stix libjs-mathjax-doc mate-desktop-environment-extras rss-glx synaptic python-configobj-doc python-psutil-doc heimdal-clients  mate-sensors-applet-nvidia


sudo apt install geany geany-common geany-plugins geany-plugins-common

sudo apt install rlwrap

sudo apt install libpoppler-glib-dev poppler-utils browser-plugin-evince

error: RPC failed; curl 56 GnuTLS recv error (-9): A TLS packet with unexpected length was received.
git config --global http.postBuffer 2000000000
not ok
git config --global https.postBuffer 2000000000
sudo apt install gnutls-bin
git config --global http.sslVerify false
git config --global core.longpaths true
anyway ok


sudo cpanm Goo::Canvas/libgoo-canvas-perl
not ok
sudo apt install libgoocanvas2-perl
not ok
https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas-common_1.0.0-1_all.deb
https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas3_1.0.0-1_amd64.deb
https://launchpad.net/ubuntu/+archive/primary/+files/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb

sudo dpkg -i ~/Downloads/libgoocanvas3_1.0.0-1_amd64.deb
sudo dpkg -i ~/Downloads/libgoocanvas-common_1.0.0-1_all.deb
sudo dpkg -i ~/Downloads/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb
sudo apt-get -f install
shutter 编辑功能ok了

https://launchpad.net/ubuntu/+archive/primary/+files/gnome-web-photo_0.10.6-1_amd64.deb
sudo dpkg -i ~/Downloads/gnome-web-photo_0.10.6-1_amd64.deb
sudo apt-get -f install

sudo cpanm Image::ExifTool
sudo cpanm --mirror http://mirrors.163.com/cpan/ --mirror-only Gtk2::AppIndicator
not ok
sudo apt install libgtk2-appindicator-perl
not ok
sudo apt install libappindicator-dev libgtk2.0-dev
//sudo cpan -i Gtk2::AppIndicator
sudo cpanm Gtk2::AppIndicator



sudo apt install miredo



cat /tmp/.mount_Logic-cLBdoK/resources/linux/99-SaleaeLogic.rules | sudo tee /etc/udev/rules.d/99-SaleaeLogic.rules > /dev/null && echo "finished installing /etc/udev/rules.d/99-SaleaeLogic.rules"


sudo apt install zstd libzstd-dev libzstd1-dev
tar -I zstd -xvf dsview-1.12-2-x86_64.pkg.tar.zst


sudo apt-get install git-core build-essential cmake autoconf automake libtool pkg-config \
   libglib2.0-dev libzip-dev libudev-dev libusb-1.0-0-dev \
   python3-dev qt5-default libboost-dev libboost-test-dev libboost-thread-dev libboost-system-dev libboost-filesystem-dev check libfftw3-dev

/etc/udev/rules.d/DreamSourceLab.rules




sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer


Android Studio: /dev/kvm device permission denied
sudo apt install qemu-kvm
ls -al /dev/kvm
grep kvm /etc/group
sudo adduser $USER kvm
grep kvm /etc/group

vbox downgrade为vbox6.1.14




maybe don‘t need this adb shit
sudo apt-get install android-tools-adb

andreas@Vostro-5880:/opt/Android
$ ./android-sdk/platform-tools/adb --version
Android Debug Bridge version 1.0.41
Version 31.0.2-7242960
Installed as /opt/Android/android-sdk/platform-tools/adb
andreas@Vostro-5880:/opt/Android
$ adb --version
Android Debug Bridge version 1.0.39
Version 1:8.1.0+r23-5~18.04
Installed as /usr/lib/android-sdk/platform-tools/adb

check
~/.android/adb_usb.ini
/etc/udev/rules.d/50-android.rules

after modify rules don't forget
sudo /etc/init.d/udev restart


sudo apt install tree

sudo apt install ninja-build

sudo apt install cutecom


~/.bashrc

export LM_LICENSE_FILE=/opt/modelsim/license.dat:/opt/altera/license.dat:/opt/lscc/license.dat:/opt/synopsys/synopsys.dat
export PATH=$PATH:/opt/modelsim/modeltech/bin:/opt/modelsim/modeltech/linux_x86_64:/opt/altera/11.0/quartus/bin:/opt/altera/11.0/nios2eds/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/altera/11.0/quartus/dsp_builder/bin64:/opt/altera/11.0/quartus/dspba/Blocksets/BaseBlocks/linux64



/opt/modelsim/modeltech/bin/../linux_x86_64/vish: error while loading shared libraries: libpng12.so.0: cannot open shared object file: No such file or directory
cp /opt/modelsim/modeltech/linux_x86_64 libpng12.so.0* /opt/modelsim/modeltech/lib



sudo apt install gradle gradle-doc gradle-completion
sudo apt purge gradle gradle-doc

sudo snap install gradle  # version 7.0.2, or
sudo apt  install gradle

See 'snap info gradle' for additional versions.

sudo snap install gradle --classic


https://github.com/freemed/tty0tty
sudo apt-get install devscripts
sudo apt-get update && sudo apt-get install -y dh-make dkms build-essential


sudo apt-get install libqt5serialport5
sudo apt-get install libqt5serialport5-dev




sudo apt install binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64  gcc-mingw-w64-base g++-mingw-w64 gcc-mingw-w64 binutils-mingw-w64 gdb-mingw-w64 gdb-mingw-w64-target gfortran-mingw-w64 gfortran-mingw-w64-i686 gfortran-mingw-w64-x86-64 gnat-mingw-w64 gnat-mingw-w64-i686 gnat-mingw-w64-x86-64 gobjc++-mingw-w64 gobjc++-mingw-w64-i686 gobjc++-mingw-w64-x86-64 gobjc-mingw-w64 gobjc-mingw-w64-i686 gobjc-mingw-w64-x86-64 mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-tools mingw-w64-x86-64-dev






